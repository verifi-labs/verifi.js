{"abi":[{"type":"function","name":"getVotingPower","inputs":[{"name":"","type":"uint32","internalType":"uint32"},{"name":"voter","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"},{"name":"userParams","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"votingPower","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"error","name":"InvalidMember","inputs":[]},{"type":"error","name":"InvalidProof","inputs":[]}],"bytecode":{"object":"0x608080604052346100165761042b908161001c8239f35b600080fdfe608060409080825260048036101561001657600080fd5b600090813560e01c63871d81b71461002d57600080fd5b346103e75760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e757803563ffffffff8116036103e757602493843573ffffffffffffffffffffffffffffffffffffffff948582168092036103e35767ffffffffffffffff6044358181116103df576100af90369087016103eb565b90976064358381116103db57906100cd8a9594939236908a016103eb565b909260209687918101031261035f5782019282840393606085126103d75783358281116103d35784019481601f870112156103d3578535918383116103a85760059683881b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09485603f8401168b018b81108882111761037a578e528a528a808b019282010192831161037657908a808e9695949301915b8383106103635750505050011261035f578751908882018281108282111761030857895286840135938385169485810361035b578352890135976bffffffffffffffffffffffff94858a168a0361035b57888401998a5203610333578851928784019251168252838851168984015288835260608301918383108284111761030857828a5283519020608084019081528783529260a001908111828210176102dd5788525190209488955b845187101561029c5786841b8501860151908181101561028f578a5285528689205b957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146102645760010195610211565b8b8a60118b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b908a528552868920610233565b91879189600188958e3514036102b6575051169051908152f35b83517f09bde339000000000000000000000000000000000000000000000000000000008152fd5b8c8b60418c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8d8c60418d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8989517f73d8c982000000000000000000000000000000000000000000000000000000008152fd5b8c80fd5b8980fd5b823581528e9650918101918c9101610166565b8e80fd5b5050508f8e60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8e8d60418e7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8b80fd5b8a80fd5b8880fd5b8680fd5b8480fd5b5080fd5b9181601f840112156104195782359167ffffffffffffffff8311610419576020838186019501011161041957565b600080fdfea164736f6c6343000812000a","sourceMap":"370:1556:125:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060409080825260048036101561001657600080fd5b600090813560e01c63871d81b71461002d57600080fd5b346103e75760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103e757803563ffffffff8116036103e757602493843573ffffffffffffffffffffffffffffffffffffffff948582168092036103e35767ffffffffffffffff6044358181116103df576100af90369087016103eb565b90976064358381116103db57906100cd8a9594939236908a016103eb565b909260209687918101031261035f5782019282840393606085126103d75783358281116103d35784019481601f870112156103d3578535918383116103a85760059683881b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09485603f8401168b018b81108882111761037a578e528a528a808b019282010192831161037657908a808e9695949301915b8383106103635750505050011261035f578751908882018281108282111761030857895286840135938385169485810361035b578352890135976bffffffffffffffffffffffff94858a168a0361035b57888401998a5203610333578851928784019251168252838851168984015288835260608301918383108284111761030857828a5283519020608084019081528783529260a001908111828210176102dd5788525190209488955b845187101561029c5786841b8501860151908181101561028f578a5285528689205b957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146102645760010195610211565b8b8a60118b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b908a528552868920610233565b91879189600188958e3514036102b6575051169051908152f35b83517f09bde339000000000000000000000000000000000000000000000000000000008152fd5b8c8b60418c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8d8c60418d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8989517f73d8c982000000000000000000000000000000000000000000000000000000008152fd5b8c80fd5b8980fd5b823581528e9650918101918c9101610166565b8e80fd5b5050508f8e60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8e8d60418e7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8b80fd5b8a80fd5b8880fd5b8680fd5b8480fd5b5080fd5b9181601f840112156104195782359167ffffffffffffffff8311610419576020838186019501011161041957565b600080fdfea164736f6c6343000812000a","sourceMap":"370:1556:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1538:29;;;;;370:1556;;;;1626:43;;370:1556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:20;1680:48;;370:1556;;1787:18;;;;370:1556;;;;;;;;;;;;;1787:18;;;370:1556;;;;;;;;;;;;;;;;;;1777:29;;370:1556;;;;;;;;;;;;;;;;;;;;;;;;1754:54;;2078:13:71;;2073:116;2111:3;370:1556:125;;2093:16:71;;;;;370:1556:125;;;;;;;;;9294:5:71;;;;;;9494:119;;;;;;;9294:51;2111:3;370:1556:125;;;;;;;2078:13:71;;;370:1556:125;;;;;;;;;;9294:51:71;9494:119;;;;;;;;9294:51;;2093:16;;;;;370:1556:125;2093:16:71;;;370:1556:125;1270:33:71;1822:45:125;1818:72;;370:1556;;;;;;;;;1818:72;370:1556;;1876:14;;;;370:1556;;;;;;;;;;;;;;;;;;;;1680:48;370:1556;;;1713:15;;;;370:1556;;;;;;;;;;;;;;;-1:-1:-1;370:1556:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;","linkReferences":{}},"methodIdentifiers":{"getVotingPower(uint32,address,bytes,bytes)":"871d81b7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userParams\",\"type\":\"bytes\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVotingPower(uint32,address,bytes,bytes)\":{\"params\":{\"params\":\"Parameter array containing the root the merkle tree containing the whitelist.\",\"userParams\":\"Parameter array containing the desired member of the whitelist and its associated merkle proof.\",\"voter\":\"The address to get the voting power of.\"},\"returns\":{\"votingPower\":\"The voting power of the address if it exists in the whitelist, otherwise reverts.\"}}},\"title\":\"Whitelist Voting Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidMember()\":[{\"notice\":\"Error thrown when the proof submitted does not correspond to the `voter` address.\"}],\"InvalidProof()\":[{\"notice\":\"Error thrown when the proof submitted is invalid.\"}]},\"kind\":\"user\",\"methods\":{\"getVotingPower(uint32,address,bytes,bytes)\":{\"notice\":\"Returns the voting power of an address.\"}},\"notice\":\"Allows a variable voting power whitelist that is stored in a merkle tree to be used for voting power.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/voting-strategies/MerkleWhitelistVotingStrategy.sol\":\"MerkleWhitelistVotingStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@murky/=lib/murky/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"src/interfaces/IVotingStrategy.sol\":{\"keccak256\":\"0xb97999d3a8b99bbd2d2ab6af81c713e58712c8f64a8b5fd05650ea8402ac4e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58fdfe331e3da03708393ab00678ae33f2fe2b9bca780484c8e5aec1577733f4\",\"dweb:/ipfs/QmQG3vMGucyfhucH4e4Myikn41bntXH5QpsDSYS8kCbtF5\"]},\"src/voting-strategies/MerkleWhitelistVotingStrategy.sol\":{\"keccak256\":\"0x607ffaf4a80340a88b4c3d1e6f073b9a86f212dc672c1622e570bf44668c62fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79b209e5d2a708e8f414279dff8da52d55210b1b503e114d17c3a13a46463f2a\",\"dweb:/ipfs/QmXLvha6fb1B6WWmMLQ3PUaGuzEr5cjTSUzMxDFTJUcXBK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidMember"},{"inputs":[],"type":"error","name":"InvalidProof"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"address","name":"voter","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"bytes","name":"userParams","type":"bytes"}],"stateMutability":"pure","type":"function","name":"getVotingPower","outputs":[{"internalType":"uint256","name":"votingPower","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getVotingPower(uint32,address,bytes,bytes)":{"params":{"params":"Parameter array containing the root the merkle tree containing the whitelist.","userParams":"Parameter array containing the desired member of the whitelist and its associated merkle proof.","voter":"The address to get the voting power of."},"returns":{"votingPower":"The voting power of the address if it exists in the whitelist, otherwise reverts."}}},"version":1},"userdoc":{"kind":"user","methods":{"getVotingPower(uint32,address,bytes,bytes)":{"notice":"Returns the voting power of an address."}},"version":1}},"settings":{"remappings":["@gnosis.pm/safe-contracts/=lib/safe-contracts/","@murky/=lib/murky/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@zodiac/=lib/zodiac/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","safe-contracts/=lib/safe-contracts/contracts/","zodiac/=lib/zodiac/contracts/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/voting-strategies/MerkleWhitelistVotingStrategy.sol":"MerkleWhitelistVotingStrategy"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol":{"keccak256":"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac","urls":["bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04","dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"],"license":"MIT"},"src/interfaces/IVotingStrategy.sol":{"keccak256":"0xb97999d3a8b99bbd2d2ab6af81c713e58712c8f64a8b5fd05650ea8402ac4e3e","urls":["bzz-raw://58fdfe331e3da03708393ab00678ae33f2fe2b9bca780484c8e5aec1577733f4","dweb:/ipfs/QmQG3vMGucyfhucH4e4Myikn41bntXH5QpsDSYS8kCbtF5"],"license":"MIT"},"src/voting-strategies/MerkleWhitelistVotingStrategy.sol":{"keccak256":"0x607ffaf4a80340a88b4c3d1e6f073b9a86f212dc672c1622e570bf44668c62fd","urls":["bzz-raw://79b209e5d2a708e8f414279dff8da52d55210b1b503e114d17c3a13a46463f2a","dweb:/ipfs/QmXLvha6fb1B6WWmMLQ3PUaGuzEr5cjTSUzMxDFTJUcXBK"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/voting-strategies/MerkleWhitelistVotingStrategy.sol","id":65422,"exportedSymbols":{"IVotingStrategy":[63394],"MerkleProof":[54066],"MerkleWhitelistVotingStrategy":[65421]},"nodeType":"SourceUnit","src":"33:1894:125","nodes":[{"id":65320,"nodeType":"PragmaDirective","src":"33:24:125","nodes":[],"literals":["solidity","^","0.8",".18"]},{"id":65322,"nodeType":"ImportDirective","src":"59:89:125","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","nameLocation":"-1:-1:-1","scope":65422,"sourceUnit":54067,"symbolAliases":[{"foreign":{"id":65321,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54066,"src":"68:11:125","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65324,"nodeType":"ImportDirective","src":"149:68:125","nodes":[],"absolutePath":"src/interfaces/IVotingStrategy.sol","file":"../interfaces/IVotingStrategy.sol","nameLocation":"-1:-1:-1","scope":65422,"sourceUnit":63395,"symbolAliases":[{"foreign":{"id":65323,"name":"IVotingStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63394,"src":"158:15:125","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65421,"nodeType":"ContractDefinition","src":"370:1556:125","nodes":[{"id":65330,"nodeType":"ErrorDefinition","src":"500:21:125","nodes":[],"documentation":{"id":65328,"nodeType":"StructuredDocumentation","src":"434:61:125","text":"@notice Error thrown when the proof submitted is invalid."},"errorSelector":"09bde339","name":"InvalidProof","nameLocation":"506:12:125","parameters":{"id":65329,"nodeType":"ParameterList","parameters":[],"src":"518:2:125"}},{"id":65333,"nodeType":"ErrorDefinition","src":"625:22:125","nodes":[],"documentation":{"id":65331,"nodeType":"StructuredDocumentation","src":"527:93:125","text":"@notice Error thrown when the proof submitted does not correspond to the `voter` address."},"errorSelector":"73d8c982","name":"InvalidMember","nameLocation":"631:13:125","parameters":{"id":65332,"nodeType":"ParameterList","parameters":[],"src":"644:2:125"}},{"id":65338,"nodeType":"StructDefinition","src":"709:143:125","nodes":[],"canonicalName":"MerkleWhitelistVotingStrategy.Member","members":[{"constant":false,"id":65335,"mutability":"mutable","name":"addr","nameLocation":"779:4:125","nodeType":"VariableDeclaration","scope":65338,"src":"771:12:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65334,"name":"address","nodeType":"ElementaryTypeName","src":"771:7:125","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65337,"mutability":"mutable","name":"vp","nameLocation":"843:2:125","nodeType":"VariableDeclaration","scope":65338,"src":"836:9:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":65336,"name":"uint96","nodeType":"ElementaryTypeName","src":"836:6:125","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Member","nameLocation":"716:6:125","scope":65421,"visibility":"public"},{"id":65420,"nodeType":"FunctionDefinition","src":"1307:617:125","nodes":[],"body":{"id":65419,"nodeType":"Block","src":"1513:411:125","nodes":[],"statements":[{"assignments":[65354],"declarations":[{"constant":false,"id":65354,"mutability":"mutable","name":"root","nameLocation":"1531:4:125","nodeType":"VariableDeclaration","scope":65419,"src":"1523:12:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1523:7:125","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":65362,"initialValue":{"arguments":[{"id":65357,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65345,"src":"1549:6:125","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":65359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1558:7:125","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":65358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1558:7:125","typeDescriptions":{}}}],"id":65360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1557:9:125","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":65355,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1538:3:125","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":65356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1542:6:125","memberName":"decode","nodeType":"MemberAccess","src":"1538:10:125","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":65361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1538:29:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1523:44:125"},{"assignments":[65367,65370],"declarations":[{"constant":false,"id":65367,"mutability":"mutable","name":"proof","nameLocation":"1595:5:125","nodeType":"VariableDeclaration","scope":65419,"src":"1578:22:125","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":65365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1578:7:125","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":65366,"nodeType":"ArrayTypeName","src":"1578:9:125","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":65370,"mutability":"mutable","name":"member","nameLocation":"1616:6:125","nodeType":"VariableDeclaration","scope":65419,"src":"1602:20:125","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$65338_memory_ptr","typeString":"struct MerkleWhitelistVotingStrategy.Member"},"typeName":{"id":65369,"nodeType":"UserDefinedTypeName","pathNode":{"id":65368,"name":"Member","nameLocations":["1602:6:125"],"nodeType":"IdentifierPath","referencedDeclaration":65338,"src":"1602:6:125"},"referencedDeclaration":65338,"src":"1602:6:125","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$65338_storage_ptr","typeString":"struct MerkleWhitelistVotingStrategy.Member"}},"visibility":"internal"}],"id":65380,"initialValue":{"arguments":[{"id":65373,"name":"userParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65347,"src":"1637:10:125","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"baseExpression":{"id":65375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1650:7:125","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":65374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1650:7:125","typeDescriptions":{}}},"id":65376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:9:125","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"type(bytes32[] memory)"}},{"id":65377,"name":"Member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65338,"src":"1661:6:125","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Member_$65338_storage_ptr_$","typeString":"type(struct MerkleWhitelistVotingStrategy.Member storage pointer)"}}],"id":65378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1649:19:125","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$_t_type$_t_struct$_Member_$65338_storage_ptr_$_$","typeString":"tuple(type(bytes32[] memory),type(struct MerkleWhitelistVotingStrategy.Member storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$_t_type$_t_struct$_Member_$65338_storage_ptr_$_$","typeString":"tuple(type(bytes32[] memory),type(struct MerkleWhitelistVotingStrategy.Member storage pointer))"}],"expression":{"id":65371,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1626:3:125","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":65372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1630:6:125","memberName":"decode","nodeType":"MemberAccess","src":"1626:10:125","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":65379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:43:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_struct$_Member_$65338_memory_ptr_$","typeString":"tuple(bytes32[] memory,struct MerkleWhitelistVotingStrategy.Member memory)"}},"nodeType":"VariableDeclarationStatement","src":"1577:92:125"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":65384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":65381,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65370,"src":"1684:6:125","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$65338_memory_ptr","typeString":"struct MerkleWhitelistVotingStrategy.Member memory"}},"id":65382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1691:4:125","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":65335,"src":"1684:11:125","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":65383,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65343,"src":"1699:5:125","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1684:20:125","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":65388,"nodeType":"IfStatement","src":"1680:48:125","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":65385,"name":"InvalidMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65333,"src":"1713:13:125","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":65386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:15:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65387,"nodeType":"RevertStatement","src":"1706:22:125"}},{"assignments":[65390],"declarations":[{"constant":false,"id":65390,"mutability":"mutable","name":"leaf","nameLocation":"1747:4:125","nodeType":"VariableDeclaration","scope":65419,"src":"1739:12:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1739:7:125","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":65403,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":65398,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65370,"src":"1798:6:125","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$65338_memory_ptr","typeString":"struct MerkleWhitelistVotingStrategy.Member memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Member_$65338_memory_ptr","typeString":"struct MerkleWhitelistVotingStrategy.Member memory"}],"expression":{"id":65396,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1787:3:125","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":65397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:6:125","memberName":"encode","nodeType":"MemberAccess","src":"1787:10:125","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":65399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1787:18:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":65395,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1777:9:125","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":65400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:29:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":65393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1764:5:125","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":65392,"name":"bytes","nodeType":"ElementaryTypeName","src":"1764:5:125","typeDescriptions":{}}},"id":65394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1770:6:125","memberName":"concat","nodeType":"MemberAccess","src":"1764:12:125","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":65401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:43:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":65391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1754:9:125","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":65402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1754:54:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1739:69:125"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":65411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":65406,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65367,"src":"1841:5:125","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":65407,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65354,"src":"1848:4:125","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":65408,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65390,"src":"1854:4:125","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":65404,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54066,"src":"1822:11:125","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$54066_$","typeString":"type(library MerkleProof)"}},"id":65405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1834:6:125","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":53562,"src":"1822:18:125","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":65409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:37:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"74727565","id":65410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1863:4:125","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1822:45:125","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":65415,"nodeType":"IfStatement","src":"1818:72:125","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":65412,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65330,"src":"1876:12:125","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":65413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:14:125","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65414,"nodeType":"RevertStatement","src":"1869:21:125"}},{"expression":{"expression":{"id":65416,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65370,"src":"1908:6:125","typeDescriptions":{"typeIdentifier":"t_struct$_Member_$65338_memory_ptr","typeString":"struct MerkleWhitelistVotingStrategy.Member memory"}},"id":65417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:2:125","memberName":"vp","nodeType":"MemberAccess","referencedDeclaration":65337,"src":"1908:9:125","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":65352,"id":65418,"nodeType":"Return","src":"1901:16:125"}]},"baseFunctions":[63393],"documentation":{"id":65339,"nodeType":"StructuredDocumentation","src":"858:444:125","text":"@notice Returns the voting power of an address.\n @param voter The address to get the voting power of.\n @param params Parameter array containing the root the merkle tree containing the whitelist.\n @param userParams Parameter array containing the desired member of the whitelist and its associated merkle proof.\n @return votingPower The voting power of the address if it exists in the whitelist, otherwise reverts."},"functionSelector":"871d81b7","implemented":true,"kind":"function","modifiers":[],"name":"getVotingPower","nameLocation":"1316:14:125","overrides":{"id":65349,"nodeType":"OverrideSpecifier","overrides":[],"src":"1474:8:125"},"parameters":{"id":65348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65420,"src":"1340:6:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":65340,"name":"uint32","nodeType":"ElementaryTypeName","src":"1340:6:125","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":65343,"mutability":"mutable","name":"voter","nameLocation":"1382:5:125","nodeType":"VariableDeclaration","scope":65420,"src":"1374:13:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65342,"name":"address","nodeType":"ElementaryTypeName","src":"1374:7:125","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65345,"mutability":"mutable","name":"params","nameLocation":"1412:6:125","nodeType":"VariableDeclaration","scope":65420,"src":"1397:21:125","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65344,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:125","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":65347,"mutability":"mutable","name":"userParams","nameLocation":"1443:10:125","nodeType":"VariableDeclaration","scope":65420,"src":"1428:25:125","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65346,"name":"bytes","nodeType":"ElementaryTypeName","src":"1428:5:125","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1330:129:125"},"returnParameters":{"id":65352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65351,"mutability":"mutable","name":"votingPower","nameLocation":"1500:11:125","nodeType":"VariableDeclaration","scope":65420,"src":"1492:19:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:125","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1491:21:125"},"scope":65421,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":65326,"name":"IVotingStrategy","nameLocations":["412:15:125"],"nodeType":"IdentifierPath","referencedDeclaration":63394,"src":"412:15:125"},"id":65327,"nodeType":"InheritanceSpecifier","src":"412:15:125"}],"canonicalName":"MerkleWhitelistVotingStrategy","contractDependencies":[],"contractKind":"contract","documentation":{"id":65325,"nodeType":"StructuredDocumentation","src":"219:151:125","text":"@title Whitelist Voting Strategy\n @notice Allows a variable voting power whitelist that is stored in a merkle tree to be used for voting power."},"fullyImplemented":true,"linearizedBaseContracts":[65421,63394],"name":"MerkleWhitelistVotingStrategy","nameLocation":"379:29:125","scope":65422,"usedErrors":[65330,65333]}],"license":"MIT"},"id":125}