{"abi":[{"type":"function","name":"activeVotingStrategies","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"authenticators","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"cancel","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"execute","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"executionPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getProposalStatus","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint8","internalType":"enum ProposalStatus"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"input","type":"tuple","internalType":"struct InitializeCalldata","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"votingDelay","type":"uint32","internalType":"uint32"},{"name":"minVotingDuration","type":"uint32","internalType":"uint32"},{"name":"maxVotingDuration","type":"uint32","internalType":"uint32"},{"name":"proposalValidationStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"proposalValidationStrategyMetadataURI","type":"string","internalType":"string"},{"name":"daoURI","type":"string","internalType":"string"},{"name":"metadataURI","type":"string","internalType":"string"},{"name":"votingStrategies","type":"tuple[]","internalType":"struct Strategy[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"votingStrategyMetadataURIs","type":"string[]","internalType":"string[]"},{"name":"authenticators","type":"address[]","internalType":"address[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"maxVotingDuration","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"minVotingDuration","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"nextProposalId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"nextVotingStrategyIndex","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"proposalValidationStrategy","inputs":[],"outputs":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"proposals","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"author","type":"address","internalType":"address"},{"name":"startBlockNumber","type":"uint32","internalType":"uint32"},{"name":"executionStrategy","type":"address","internalType":"contract IExecutionStrategy"},{"name":"minEndBlockNumber","type":"uint32","internalType":"uint32"},{"name":"maxEndBlockNumber","type":"uint32","internalType":"uint32"},{"name":"finalizationStatus","type":"uint8","internalType":"enum FinalizationStatus"},{"name":"executionPayloadHash","type":"bytes32","internalType":"bytes32"},{"name":"activeVotingStrategies","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"propose","inputs":[{"name":"author","type":"address","internalType":"address"},{"name":"metadataURI","type":"string","internalType":"string"},{"name":"executionStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"userProposalValidationParams","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateProposal","inputs":[{"name":"author","type":"address","internalType":"address"},{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"executionStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateSettings","inputs":[{"name":"input","type":"tuple","internalType":"struct UpdateSettingsCalldata","components":[{"name":"minVotingDuration","type":"uint32","internalType":"uint32"},{"name":"maxVotingDuration","type":"uint32","internalType":"uint32"},{"name":"votingDelay","type":"uint32","internalType":"uint32"},{"name":"metadataURI","type":"string","internalType":"string"},{"name":"daoURI","type":"string","internalType":"string"},{"name":"proposalValidationStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"proposalValidationStrategyMetadataURI","type":"string","internalType":"string"},{"name":"authenticatorsToAdd","type":"address[]","internalType":"address[]"},{"name":"authenticatorsToRemove","type":"address[]","internalType":"address[]"},{"name":"votingStrategiesToAdd","type":"tuple[]","internalType":"struct Strategy[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"votingStrategyMetadataURIsToAdd","type":"string[]","internalType":"string[]"},{"name":"votingStrategiesToRemove","type":"uint8[]","internalType":"uint8[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vote","inputs":[{"name":"voter","type":"address","internalType":"address"},{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"choice","type":"uint8","internalType":"enum Choice"},{"name":"userVotingStrategies","type":"tuple[]","internalType":"struct IndexedStrategy[]","components":[{"name":"index","type":"uint8","internalType":"uint8"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"votePower","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"choice","type":"uint8","internalType":"enum Choice"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"voteRegistry","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"voter","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"votingDelay","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"votingStrategies","inputs":[{"name":"index","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"event","name":"AuthenticatorsAdded","inputs":[{"name":"newAuthenticators","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false},{"type":"event","name":"AuthenticatorsRemoved","inputs":[{"name":"authenticators","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false},{"type":"event","name":"DaoURIUpdated","inputs":[{"name":"newDaoURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"MaxVotingDurationUpdated","inputs":[{"name":"newMaxVotingDuration","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"MetadataURIUpdated","inputs":[{"name":"newMetadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"MinVotingDurationUpdated","inputs":[{"name":"newMinVotingDuration","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"ProposalCancelled","inputs":[{"name":"proposalId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalCreated","inputs":[{"name":"proposalId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"author","type":"address","indexed":false,"internalType":"address"},{"name":"proposal","type":"tuple","indexed":false,"internalType":"struct Proposal","components":[{"name":"author","type":"address","internalType":"address"},{"name":"startBlockNumber","type":"uint32","internalType":"uint32"},{"name":"executionStrategy","type":"address","internalType":"contract IExecutionStrategy"},{"name":"minEndBlockNumber","type":"uint32","internalType":"uint32"},{"name":"maxEndBlockNumber","type":"uint32","internalType":"uint32"},{"name":"finalizationStatus","type":"uint8","internalType":"enum FinalizationStatus"},{"name":"executionPayloadHash","type":"bytes32","internalType":"bytes32"},{"name":"activeVotingStrategies","type":"uint256","internalType":"uint256"}]},{"name":"metadataUri","type":"string","indexed":false,"internalType":"string"},{"name":"payload","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ProposalExecuted","inputs":[{"name":"proposalId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProposalUpdated","inputs":[{"name":"proposalId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newExecutionStrategy","type":"tuple","indexed":false,"internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"newMetadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"ProposalValidationStrategyUpdated","inputs":[{"name":"newProposalValidationStrategy","type":"tuple","indexed":false,"internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"newProposalValidationStrategyMetadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"SpaceCreated","inputs":[{"name":"space","type":"address","indexed":false,"internalType":"address"},{"name":"input","type":"tuple","indexed":false,"internalType":"struct InitializeCalldata","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"votingDelay","type":"uint32","internalType":"uint32"},{"name":"minVotingDuration","type":"uint32","internalType":"uint32"},{"name":"maxVotingDuration","type":"uint32","internalType":"uint32"},{"name":"proposalValidationStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"proposalValidationStrategyMetadataURI","type":"string","internalType":"string"},{"name":"daoURI","type":"string","internalType":"string"},{"name":"metadataURI","type":"string","internalType":"string"},{"name":"votingStrategies","type":"tuple[]","internalType":"struct Strategy[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"votingStrategyMetadataURIs","type":"string[]","internalType":"string[]"},{"name":"authenticators","type":"address[]","internalType":"address[]"}]}],"anonymous":false},{"type":"event","name":"VoteCast","inputs":[{"name":"proposalId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"voter","type":"address","indexed":false,"internalType":"address"},{"name":"choice","type":"uint8","indexed":false,"internalType":"enum Choice"},{"name":"votingPower","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VoteCastWithMetadata","inputs":[{"name":"proposalId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"voter","type":"address","indexed":false,"internalType":"address"},{"name":"choice","type":"uint8","indexed":false,"internalType":"enum Choice"},{"name":"votingPower","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"metadataUri","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"VotingDelayUpdated","inputs":[{"name":"newVotingDelay","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"VotingStrategiesAdded","inputs":[{"name":"newVotingStrategies","type":"tuple[]","indexed":false,"internalType":"struct Strategy[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"newVotingStrategyMetadataURIs","type":"string[]","indexed":false,"internalType":"string[]"}],"anonymous":false},{"type":"event","name":"VotingStrategiesRemoved","inputs":[{"name":"votingStrategyIndices","type":"uint8[]","indexed":false,"internalType":"uint8[]"}],"anonymous":false},{"type":"error","name":"ArrayLengthMismatch","inputs":[]},{"type":"error","name":"AuthenticatorNotWhitelisted","inputs":[]},{"type":"error","name":"EmptyArray","inputs":[]},{"type":"error","name":"ExceedsStrategyLimit","inputs":[]},{"type":"error","name":"FailedToPassProposalValidation","inputs":[]},{"type":"error","name":"InvalidCaller","inputs":[]},{"type":"error","name":"InvalidDuration","inputs":[{"name":"minVotingDuration","type":"uint32","internalType":"uint32"},{"name":"maxVotingDuration","type":"uint32","internalType":"uint32"}]},{"type":"error","name":"InvalidPayload","inputs":[]},{"type":"error","name":"InvalidProposal","inputs":[]},{"type":"error","name":"InvalidStrategyIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NoActiveVotingStrategies","inputs":[]},{"type":"error","name":"ProposalFinalized","inputs":[]},{"type":"error","name":"UserAlreadyVoted","inputs":[]},{"type":"error","name":"UserHasNoVotingPower","inputs":[]},{"type":"error","name":"VotingDelayHasPassed","inputs":[]},{"type":"error","name":"VotingPeriodHasEnded","inputs":[]},{"type":"error","name":"VotingPeriodHasNotStarted","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activeVotingStrategies()":"a44c31d5","authenticators(address)":"791eb854","cancel(uint256)":"40e58ee5","execute(uint256,bytes)":"59efcb15","getProposalStatus(uint256)":"401853b7","initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))":"f8b669d6","maxVotingDuration()":"9d49257c","minVotingDuration()":"6df7bab3","nextProposalId()":"2ab09d14","nextVotingStrategyIndex()":"05337104","proposalValidationStrategy()":"ab1d89a7","proposals(uint256)":"013cf08b","propose(address,string,(address,bytes),bytes)":"aad83f3b","updateProposal(address,uint256,(address,bytes),string)":"0b515570","updateSettings((uint32,uint32,uint32,string,string,(address,bytes),string,address[],address[],(address,bytes)[],string[],uint8[]))":"d830616c","vote(address,uint256,uint8,(uint8,bytes)[],string)":"bc7e56f0","votePower(uint256,uint8)":"de7c3c44","voteRegistry(uint256,address)":"792cb5a3","votingDelay()":"3932abb1","votingStrategies(uint8)":"61ae2978"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AuthenticatorNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsStrategyLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToPassProposalValidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"minVotingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxVotingDuration\",\"type\":\"uint32\"}],\"name\":\"InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProposal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InvalidStrategyIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoActiveVotingStrategies\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalFinalized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoVotingPower\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingDelayHasPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingPeriodHasEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingPeriodHasNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newAuthenticators\",\"type\":\"address[]\"}],\"name\":\"AuthenticatorsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"authenticators\",\"type\":\"address[]\"}],\"name\":\"AuthenticatorsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newDaoURI\",\"type\":\"string\"}],\"name\":\"DaoURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMaxVotingDuration\",\"type\":\"uint32\"}],\"name\":\"MaxVotingDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMetadataURI\",\"type\":\"string\"}],\"name\":\"MetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMinVotingDuration\",\"type\":\"uint32\"}],\"name\":\"MinVotingDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Strategy\",\"name\":\"newExecutionStrategy\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMetadataURI\",\"type\":\"string\"}],\"name\":\"ProposalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Strategy\",\"name\":\"newProposalValidationStrategy\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newProposalValidationStrategyMetadataURI\",\"type\":\"string\"}],\"name\":\"ProposalValidationStrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"votingDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minVotingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxVotingDuration\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"proposalValidationStrategy\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"proposalValidationStrategyMetadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"daoURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"votingStrategyMetadataURIs\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"authenticators\",\"type\":\"address[]\"}],\"indexed\":false,\"internalType\":\"struct InitializeCalldata\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"SpaceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Choice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Choice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"}],\"name\":\"VoteCastWithMetadata\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newVotingDelay\",\"type\":\"uint32\"}],\"name\":\"VotingDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Strategy[]\",\"name\":\"newVotingStrategies\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"newVotingStrategyMetadataURIs\",\"type\":\"string[]\"}],\"name\":\"VotingStrategiesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"votingStrategyIndices\",\"type\":\"uint8[]\"}],\"name\":\"VotingStrategiesRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activeVotingStrategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authenticators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"executionPayload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"enum ProposalStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"votingDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minVotingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxVotingDuration\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"proposalValidationStrategy\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"proposalValidationStrategyMetadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"daoURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"votingStrategyMetadataURIs\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"authenticators\",\"type\":\"address[]\"}],\"internalType\":\"struct InitializeCalldata\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVotingDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVotingDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextVotingStrategyIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalValidationStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"contract IExecutionStrategy\",\"name\":\"executionStrategy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"minEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxEndBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum FinalizationStatus\",\"name\":\"finalizationStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeVotingStrategies\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"userProposalValidationParams\",\"type\":\"bytes\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"minVotingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxVotingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"votingDelay\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"daoURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"proposalValidationStrategy\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"proposalValidationStrategyMetadataURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"authenticatorsToAdd\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"authenticatorsToRemove\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategiesToAdd\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"votingStrategyMetadataURIsToAdd\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"votingStrategiesToRemove\",\"type\":\"uint8[]\"}],\"internalType\":\"struct UpdateSettingsCalldata\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"updateSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"enum Choice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct IndexedStrategy[]\",\"name\":\"userVotingStrategies\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"enum Choice\",\"name\":\"choice\",\"type\":\"uint8\"}],\"name\":\"votePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"voteRegistry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"votingStrategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthenticatorsAdded(address[])\":{\"params\":{\"newAuthenticators\":\"The new authenticators addresses.\"}},\"AuthenticatorsRemoved(address[])\":{\"params\":{\"authenticators\":\"The authenticator addresses to remove.\"}},\"DaoURIUpdated(string)\":{\"params\":{\"newDaoURI\":\"The new DAO URI.\"}},\"MaxVotingDurationUpdated(uint32)\":{\"params\":{\"newMaxVotingDuration\":\"The new maximum voting duration.\"}},\"MetadataURIUpdated(string)\":{\"params\":{\"newMetadataURI\":\"The new metadata URI.\"}},\"MinVotingDurationUpdated(uint32)\":{\"params\":{\"newMinVotingDuration\":\"The new minimum voting duration.\"}},\"ProposalCancelled(uint256)\":{\"params\":{\"proposalId\":\"The proposal id.\"}},\"ProposalCreated(uint256,address,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),string,bytes)\":{\"params\":{\"author\":\"The address of the proposal creator.\",\"metadataUri\":\"The metadata URI for the proposal.\",\"payload\":\"The execution payload for the proposal.\",\"proposal\":\"The proposal data. Refer to the `Proposal` definition for more details.\",\"proposalId\":\"The proposal id.\"}},\"ProposalExecuted(uint256)\":{\"params\":{\"proposalId\":\"The proposal id.\"}},\"ProposalUpdated(uint256,(address,bytes),string)\":{\"params\":{\"newExecutionStrategy\":\"The new execution strategy,        consisting of a strategy address and an execution payload array.\",\"newMetadataURI\":\"The metadata URI for the proposal.\",\"proposalId\":\"The proposal id.\"}},\"ProposalValidationStrategyUpdated((address,bytes),string)\":{\"params\":{\"newProposalValidationStrategy\":\"The new proposal validation strategy,        consisting of a strategy address and an array of configuration parameters.\",\"newProposalValidationStrategyMetadataURI\":\"The metadata URI for the proposal validation strategy.\"}},\"SpaceCreated(address,(address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))\":{\"params\":{\"input\":\"The space initialization parameters.\",\"space\":\"The address of the space.\"}},\"VoteCast(uint256,address,uint8,uint256)\":{\"params\":{\"choice\":\"The vote choice (`For`, `Against`, `Abstain`).\",\"proposalId\":\"The proposal id.\",\"voter\":\"The address of the voter.\",\"votingPower\":\"The voting power of the voter.\"}},\"VoteCastWithMetadata(uint256,address,uint8,uint256,string)\":{\"params\":{\"choice\":\"The vote choice (`For`, `Against`, `Abstain`).\",\"metadataUri\":\"The metadata URI for the vote.\",\"proposalId\":\"The proposal id.\",\"voter\":\"The address of the voter.\",\"votingPower\":\"The voting power of the voter.\"}},\"VotingDelayUpdated(uint32)\":{\"params\":{\"newVotingDelay\":\"The new voting delay.\"}},\"VotingStrategiesAdded((address,bytes)[],string[])\":{\"params\":{\"newVotingStrategies\":\"The new voting strategies,        each consisting of a strategy address and an array of configuration parameters.\",\"newVotingStrategyMetadataURIs\":\"The metadata URIs for `newVotingStrategies`.\"}},\"VotingStrategiesRemoved(uint8[])\":{\"details\":\"There must be at least one voting strategy left active.\",\"params\":{\"votingStrategyIndices\":\"The indices of the voting strategies to remove.\"}}},\"kind\":\"dev\",\"methods\":{\"activeVotingStrategies()\":{\"details\":\"The index of each bit corresponds to whether the strategy at that index       in `votingStrategies` is active.\"},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The proposal to cancel.\"}},\"execute(uint256,bytes)\":{\"params\":{\"executionPayload\":\"The execution payload.\",\"proposalId\":\"The proposal id.\"}},\"getProposalStatus(uint256)\":{\"params\":{\"proposalId\":\"The ID of the proposal.\"},\"returns\":{\"_0\":\"The status of the proposal. Refer to the `ProposalStatus` enum for more information.\"}},\"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))\":{\"details\":\"A struct is used here because of solidity's stack constraints.\",\"params\":{\"input\":\"The space initialization parameters, Consists of:          owner  The address of the space owner.          votingDelay  The delay between the creation of a proposal and the start of the voting period.          minVotingDuration  The minimum duration of the voting period.          maxVotingDuration  The maximum duration of the voting period.          proposalValidationStrategy  The strategy to use to validate a proposal,             consisting of a strategy address and an array of configuration parameters.          proposalValidationStrategyMetadataURI  The metadata URI for `proposalValidationStrategy`.          daoURI  The ERC4824 DAO URI for the space.          metadataURI  The metadata URI for the space.          votingStrategies  The whitelisted voting strategies,             each consisting of a strategy address and an array of configuration parameters.          votingStrategyMetadataURIs  The metadata URIs for `votingStrategies`.          authenticators The whitelisted authenticator addresses.\"}},\"proposalValidationStrategy()\":{\"returns\":{\"addr\":\"The address of the proposal validation strategy.\",\"params\":\"The parameters of the proposal validation strategy.\"}},\"proposals(uint256)\":{\"details\":\"Returns all zeros if the proposal does not exist.\",\"params\":{\"proposalId\":\"The ID of the proposal.\"},\"returns\":{\"activeVotingStrategies\":\"The bit array of the active voting strategies for the proposal.\",\"author\":\"The address of the proposal author.\",\"executionPayloadHash\":\"The keccak256 hash of the execution payload.\",\"executionStrategy\":\"The address of the execution strategy used in the proposal.\",\"finalizationStatus\":\"The finalization status of the proposal. See `FinalizationStatus`.\",\"maxEndBlockNumber\":\"The block number of the maximum end of the voting period.\",\"minEndBlockNumber\":\"The block number of the minimum end of the voting period.\",\"startBlockNumber\":\"The block number of the start of the voting period.         This is also the snapshot block number where voting power is calculated at.\"}},\"propose(address,string,(address,bytes),bytes)\":{\"params\":{\"author\":\"The address of the proposal creator.\",\"executionStrategy\":\"The execution strategy for the proposal,          consisting of a strategy address and an execution payload.\",\"metadataURI\":\"The metadata URI for the proposal.\",\"userProposalValidationParams\":\"The user provided parameters for proposal validation.\"}},\"updateProposal(address,uint256,(address,bytes),string)\":{\"params\":{\"executionStrategy\":\"The new execution strategy.\",\"metadataURI\":\"The new metadata URI.\",\"proposalId\":\"The id of the proposal to edit.\"}},\"updateSettings((uint32,uint32,uint32,string,string,(address,bytes),string,address[],address[],(address,bytes)[],string[],uint8[]))\":{\"details\":\"The structure should consist of:     minVotingDuration The new minimum voting duration. Set to `NO_UPDATE_UINT32` to ignore.     maxVotingDuration The new maximum voting duration. Set to `NO_UPDATE_UINT32` to ignore.     votingDelay The new voting delay. Set to `NO_UPDATE_UINT32` to ignore.     metadataURI The new metadataURI. Set to `NO_UPDATE_STRING` to ignore.     daoURI The new daoURI. Set to `NO_UPDATE_STRING` to ignore.     proposalValidationStrategy The new proposal validation strategy to use. Set                 to `NO_UPDATE_STRATEGY` to ignore.     proposalValidationStrategyMetadataURI The new metadata URI for the proposal validation strategy.     authenticatorsToAdd The authenticators to add. Set to an empty array to ignore.     authenticatorsToRemove The authenticators to remove. Set to an empty array to ignore.     votingStrategiesToAdd The voting strategies to add. Set to an empty array to ignore.     votingStrategyMetadataURIsToAdd The voting strategy metadata uris to add. Set to                 an empty array to ignore.     votignStrategiesToRemove The indices of voting strategies to remove. Set to empty array to ignore.\",\"params\":{\"input\":\"The settings to modify\"}},\"vote(address,uint256,uint8,(uint8,bytes)[],string)\":{\"params\":{\"choice\":\"The vote choice  (`For`, `Against`, `Abstain`).\",\"metadataURI\":\"An optional metadata to give information about the vote.\",\"proposalId\":\"The proposal id.\",\"userVotingStrategies\":\"The strategies to use to compute the voter's voting power,          each consisting of a strategy index and an array of user provided parameters.\",\"voter\":\"The voter's address.\"}},\"votePower(uint256,uint8)\":{\"params\":{\"choice\":\"The choice of the voter.\",\"proposalId\":\"The ID of the proposal.\"}},\"voteRegistry(uint256,address)\":{\"params\":{\"proposalId\":\"The ID of the proposal.\",\"voter\":\"The address of the voter.\"}},\"votingStrategies(uint8)\":{\"params\":{\"index\":\"The index of the voting strategy.\"},\"returns\":{\"addr\":\"The address of the voting strategy.\",\"params\":\"The parameters of the voting strategy.\"}}},\"title\":\"Space Interface\",\"version\":1},\"userdoc\":{\"errors\":{\"ArrayLengthMismatch()\":[{\"notice\":\"Thrown when two arrays which must be of equal length are not.\"}],\"AuthenticatorNotWhitelisted()\":[{\"notice\":\"Thrown if the caller is not a whitelisted authenticator.\"}],\"EmptyArray()\":[{\"notice\":\"Thrown when an invalid empty array is supplied.\"}],\"ExceedsStrategyLimit()\":[{\"notice\":\"Thrown if the number of voting strategies exceeds the limit (256).         Once this limit is reached, no more strategies can be added.\"}],\"FailedToPassProposalValidation()\":[{\"notice\":\"Thrown if a new proposal did not pass the proposal validation strategy for the space.\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when the caller is unauthorized to perform a certain action.\"}],\"InvalidDuration(uint32,uint32)\":[{\"notice\":\"Thrown when an invalid minimum or maximum voting duration is supplied.\"}],\"InvalidPayload()\":[{\"notice\":\"Thrown when the execution payload supplied to the execution strategy is not equal to the payload supplied when the proposal was created.\"}],\"InvalidProposal()\":[{\"notice\":\"Thrown if a proposal is invalid.\"}],\"InvalidStrategyIndex(uint256)\":[{\"notice\":\"Thrown when an invalid strategy index is supplied.\"}],\"NoActiveVotingStrategies()\":[{\"notice\":\"Thrown when one attempts to remove all voting strategies.         There must always be at least one active voting strategy.\"}],\"ProposalFinalized()\":[{\"notice\":\"Thrown if a user attempts to finalize (execute or cancel) a proposal that has already been finalized.\"}],\"UserAlreadyVoted()\":[{\"notice\":\"Thrown if a user attempts to vote twice on the same proposal.\"}],\"UserHasNoVotingPower()\":[{\"notice\":\"Thrown if a user attempts to vote with no voting power.\"}],\"VotingDelayHasPassed()\":[{\"notice\":\"Thrown if an author attempts to update their proposal after the voting delay has passed.\"}],\"VotingPeriodHasEnded()\":[{\"notice\":\"Thrown if a user attempts to vote when the voting period has ended.\"}],\"VotingPeriodHasNotStarted()\":[{\"notice\":\"Thrown if a user attempts to vote when the voting period has not started.\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when an invalid zero address is supplied\"}]},\"events\":{\"AuthenticatorsAdded(address[])\":{\"notice\":\"Emitted when a set of authenticators are added.\"},\"AuthenticatorsRemoved(address[])\":{\"notice\":\"Emitted when a set of authenticators are removed.\"},\"DaoURIUpdated(string)\":{\"notice\":\"Emitted when the DAO URI for the space is updated.\"},\"MaxVotingDurationUpdated(uint32)\":{\"notice\":\"Emitted when the maximum voting duration is updated.\"},\"MetadataURIUpdated(string)\":{\"notice\":\"Emitted when the metadata URI for the space is updated.\"},\"MinVotingDurationUpdated(uint32)\":{\"notice\":\"Emitted when the minimum voting duration is updated.\"},\"ProposalCancelled(uint256)\":{\"notice\":\"Emitted when a proposal is cancelled.\"},\"ProposalCreated(uint256,address,(address,uint32,address,uint32,uint32,uint8,bytes32,uint256),string,bytes)\":{\"notice\":\"Emitted when a proposal is created.\"},\"ProposalExecuted(uint256)\":{\"notice\":\"Emitted when a proposal is executed.\"},\"ProposalUpdated(uint256,(address,bytes),string)\":{\"notice\":\"Emitted when a proposal is updated.\"},\"ProposalValidationStrategyUpdated((address,bytes),string)\":{\"notice\":\"Emitted when the proposal validation strategy is updated.\"},\"SpaceCreated(address,(address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))\":{\"notice\":\"Emitted when a space is created.\"},\"VoteCast(uint256,address,uint8,uint256)\":{\"notice\":\"Emitted when a vote is cast.\"},\"VoteCastWithMetadata(uint256,address,uint8,uint256,string)\":{\"notice\":\"Emitted when a vote is cast with metadata.\"},\"VotingDelayUpdated(uint32)\":{\"notice\":\"Emitted when the voting delay is updated.\"},\"VotingStrategiesAdded((address,bytes)[],string[])\":{\"notice\":\"Emitted when a set of voting strategies are added.\"},\"VotingStrategiesRemoved(uint8[])\":{\"notice\":\"Emitted when a set of voting strategies are removed.\"}},\"kind\":\"user\",\"methods\":{\"activeVotingStrategies()\":{\"notice\":\"The bit array of the current active voting strategies.\"},\"authenticators(address)\":{\"notice\":\"Returns whether a given address is a whitelisted authenticator.\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal that has not already been finalized.\"},\"execute(uint256,bytes)\":{\"notice\":\"Executes a proposal.\"},\"getProposalStatus(uint256)\":{\"notice\":\"Returns the status of a proposal.\"},\"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))\":{\"notice\":\"Initializes a space proxy after deployment.\"},\"maxVotingDuration()\":{\"notice\":\"The maximum duration of the voting period.\"},\"minVotingDuration()\":{\"notice\":\"The minimum duration of the voting period.\"},\"nextProposalId()\":{\"notice\":\"A pointer to the next available voting strategy index.\"},\"nextVotingStrategyIndex()\":{\"notice\":\"The index of the next available voting strategy.\"},\"proposalValidationStrategy()\":{\"notice\":\"The proposal validation strategy.\"},\"proposals(uint256)\":{\"notice\":\"Returns the proposal at a given ID.\"},\"propose(address,string,(address,bytes),bytes)\":{\"notice\":\"Creates a proposal.\"},\"updateProposal(address,uint256,(address,bytes),string)\":{\"notice\":\"Updates the proposal execution strategy and metadata.\"},\"updateSettings((uint32,uint32,uint32,string,string,(address,bytes),string,address[],address[],(address,bytes)[],string[],uint8[]))\":{\"notice\":\"Updates the settings.\"},\"vote(address,uint256,uint8,(uint8,bytes)[],string)\":{\"notice\":\"Casts a vote.\"},\"votePower(uint256,uint8)\":{\"notice\":\"Returns the voting power of a choice on a proposal.\"},\"voteRegistry(uint256,address)\":{\"notice\":\"Returns whether a voter has voted on a proposal.\"},\"votingDelay()\":{\"notice\":\"The delay between proposal creation and the start of the voting period.\"},\"votingStrategies(uint8)\":{\"notice\":\"Returns the voting strategy at a given index.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISpace.sol\":\"ISpace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@murky/=lib/murky/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x9b9679eff484ba280e87813d75011d80a3001c0aefb6f50c7a4ca5110c842173\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc195aca37c2e778fd58f367191cee3c16a9cf03eeb13be387d650e92866dfcd\",\"dweb:/ipfs/QmW4sJB3i3ZGUtJx3hUuuiVfEHVFvpxFufv3zM8QxuJPDu\"]},\"src/interfaces/ISpace.sol\":{\"keccak256\":\"0x5b2bfc614be17c6d734d7daffa964260d8e2bf75f5acbf9e98ac436a4f11d936\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f47afa233f4a81edf7c79c01778988f07a7b7f54bab13d774f318c935eccb307\",\"dweb:/ipfs/Qmd9sPV4HycLmSQnAjwfboU5Fc4yCY6AhohJfpm14gDSZw\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a\",\"dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb\"]},\"src/interfaces/space/ISpaceActions.sol\":{\"keccak256\":\"0x4516b8aebfb7c4b34365844bb0d90b7a2ed416196be9c9080623a2c97b9fbced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86be183223ac3faaea8e35c1db72160926bfb5329cde6751e4dcb76d81a6c8d9\",\"dweb:/ipfs/QmVmf2Y2hdAQtHBHNXc29MysVuem3Tn31BHWMWfrWMGB3N\"]},\"src/interfaces/space/ISpaceErrors.sol\":{\"keccak256\":\"0x204e2fbb17a2e84a57ab4bd3f19a33dddd19cfb985a59968396110548ed51d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ad961b7ffd9981606ae35f59b2dce5e928cdc98c7cb089b37bf5df5a6338386\",\"dweb:/ipfs/QmRDiwWYR9pvgSXayA9Y1Ap3NXYwSBgK5Jd3Fm4PkJu7FQ\"]},\"src/interfaces/space/ISpaceEvents.sol\":{\"keccak256\":\"0x6363f664496c76ce08370bdaebc9a0cf725b18c031a7a2b87bfea6c424402e7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbe42a0ad38834b0b307dbea609ab2b0f0617a6df867d103a3b25978d84c212c\",\"dweb:/ipfs/QmbxNhbr247TsQH6UoHg6vmJFXSL6vaTbViBW2fddXQDXR\"]},\"src/interfaces/space/ISpaceOwnerActions.sol\":{\"keccak256\":\"0xb97b08a44ca04477f3e7f0761542a8df6c88300f761cc7fac0a47faf7016669a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://354f3a9d3bc1cf627b9ea5f88eea898a406afd95b7d35aed043cda117193a40a\",\"dweb:/ipfs/QmeeinePhbg43MVS9jdWjVPrwZVJvU8hTfUY3onntRF4qn\"]},\"src/interfaces/space/ISpaceState.sol\":{\"keccak256\":\"0xfc38073b6fe97649ead1f34ce375a94d1382249e73cef52228c4083053c52910\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae757bc860af9d2bf83c8d4f31a44b49bb9236c756746328ad872f0fd00703cb\",\"dweb:/ipfs/QmQ3U62NjbygadR9Wv1JaTwMYjMsL4tDzecL3PxotEsK7u\"]},\"src/types.sol\":{\"keccak256\":\"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f\",\"dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ArrayLengthMismatch"},{"inputs":[],"type":"error","name":"AuthenticatorNotWhitelisted"},{"inputs":[],"type":"error","name":"EmptyArray"},{"inputs":[],"type":"error","name":"ExceedsStrategyLimit"},{"inputs":[],"type":"error","name":"FailedToPassProposalValidation"},{"inputs":[],"type":"error","name":"InvalidCaller"},{"inputs":[{"internalType":"uint32","name":"minVotingDuration","type":"uint32"},{"internalType":"uint32","name":"maxVotingDuration","type":"uint32"}],"type":"error","name":"InvalidDuration"},{"inputs":[],"type":"error","name":"InvalidPayload"},{"inputs":[],"type":"error","name":"InvalidProposal"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"type":"error","name":"InvalidStrategyIndex"},{"inputs":[],"type":"error","name":"NoActiveVotingStrategies"},{"inputs":[],"type":"error","name":"ProposalFinalized"},{"inputs":[],"type":"error","name":"UserAlreadyVoted"},{"inputs":[],"type":"error","name":"UserHasNoVotingPower"},{"inputs":[],"type":"error","name":"VotingDelayHasPassed"},{"inputs":[],"type":"error","name":"VotingPeriodHasEnded"},{"inputs":[],"type":"error","name":"VotingPeriodHasNotStarted"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[{"internalType":"address[]","name":"newAuthenticators","type":"address[]","indexed":false}],"type":"event","name":"AuthenticatorsAdded","anonymous":false},{"inputs":[{"internalType":"address[]","name":"authenticators","type":"address[]","indexed":false}],"type":"event","name":"AuthenticatorsRemoved","anonymous":false},{"inputs":[{"internalType":"string","name":"newDaoURI","type":"string","indexed":false}],"type":"event","name":"DaoURIUpdated","anonymous":false},{"inputs":[{"internalType":"uint32","name":"newMaxVotingDuration","type":"uint32","indexed":false}],"type":"event","name":"MaxVotingDurationUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"newMetadataURI","type":"string","indexed":false}],"type":"event","name":"MetadataURIUpdated","anonymous":false},{"inputs":[{"internalType":"uint32","name":"newMinVotingDuration","type":"uint32","indexed":false}],"type":"event","name":"MinVotingDurationUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":false}],"type":"event","name":"ProposalCancelled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":false},{"internalType":"address","name":"author","type":"address","indexed":false},{"internalType":"struct Proposal","name":"proposal","type":"tuple","components":[{"internalType":"address","name":"author","type":"address"},{"internalType":"uint32","name":"startBlockNumber","type":"uint32"},{"internalType":"contract IExecutionStrategy","name":"executionStrategy","type":"address"},{"internalType":"uint32","name":"minEndBlockNumber","type":"uint32"},{"internalType":"uint32","name":"maxEndBlockNumber","type":"uint32"},{"internalType":"enum FinalizationStatus","name":"finalizationStatus","type":"uint8"},{"internalType":"bytes32","name":"executionPayloadHash","type":"bytes32"},{"internalType":"uint256","name":"activeVotingStrategies","type":"uint256"}],"indexed":false},{"internalType":"string","name":"metadataUri","type":"string","indexed":false},{"internalType":"bytes","name":"payload","type":"bytes","indexed":false}],"type":"event","name":"ProposalCreated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":false}],"type":"event","name":"ProposalExecuted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":false},{"internalType":"struct Strategy","name":"newExecutionStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}],"indexed":false},{"internalType":"string","name":"newMetadataURI","type":"string","indexed":false}],"type":"event","name":"ProposalUpdated","anonymous":false},{"inputs":[{"internalType":"struct Strategy","name":"newProposalValidationStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}],"indexed":false},{"internalType":"string","name":"newProposalValidationStrategyMetadataURI","type":"string","indexed":false}],"type":"event","name":"ProposalValidationStrategyUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"space","type":"address","indexed":false},{"internalType":"struct InitializeCalldata","name":"input","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"votingDelay","type":"uint32"},{"internalType":"uint32","name":"minVotingDuration","type":"uint32"},{"internalType":"uint32","name":"maxVotingDuration","type":"uint32"},{"internalType":"struct Strategy","name":"proposalValidationStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"proposalValidationStrategyMetadataURI","type":"string"},{"internalType":"string","name":"daoURI","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"struct Strategy[]","name":"votingStrategies","type":"tuple[]","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string[]","name":"votingStrategyMetadataURIs","type":"string[]"},{"internalType":"address[]","name":"authenticators","type":"address[]"}],"indexed":false}],"type":"event","name":"SpaceCreated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":false},{"internalType":"address","name":"voter","type":"address","indexed":false},{"internalType":"enum Choice","name":"choice","type":"uint8","indexed":false},{"internalType":"uint256","name":"votingPower","type":"uint256","indexed":false}],"type":"event","name":"VoteCast","anonymous":false},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256","indexed":false},{"internalType":"address","name":"voter","type":"address","indexed":false},{"internalType":"enum Choice","name":"choice","type":"uint8","indexed":false},{"internalType":"uint256","name":"votingPower","type":"uint256","indexed":false},{"internalType":"string","name":"metadataUri","type":"string","indexed":false}],"type":"event","name":"VoteCastWithMetadata","anonymous":false},{"inputs":[{"internalType":"uint32","name":"newVotingDelay","type":"uint32","indexed":false}],"type":"event","name":"VotingDelayUpdated","anonymous":false},{"inputs":[{"internalType":"struct Strategy[]","name":"newVotingStrategies","type":"tuple[]","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}],"indexed":false},{"internalType":"string[]","name":"newVotingStrategyMetadataURIs","type":"string[]","indexed":false}],"type":"event","name":"VotingStrategiesAdded","anonymous":false},{"inputs":[{"internalType":"uint8[]","name":"votingStrategyIndices","type":"uint8[]","indexed":false}],"type":"event","name":"VotingStrategiesRemoved","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"activeVotingStrategies","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"authenticators","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"cancel"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bytes","name":"executionPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getProposalStatus","outputs":[{"internalType":"enum ProposalStatus","name":"","type":"uint8"}]},{"inputs":[{"internalType":"struct InitializeCalldata","name":"input","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"votingDelay","type":"uint32"},{"internalType":"uint32","name":"minVotingDuration","type":"uint32"},{"internalType":"uint32","name":"maxVotingDuration","type":"uint32"},{"internalType":"struct Strategy","name":"proposalValidationStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"proposalValidationStrategyMetadataURI","type":"string"},{"internalType":"string","name":"daoURI","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"struct Strategy[]","name":"votingStrategies","type":"tuple[]","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string[]","name":"votingStrategyMetadataURIs","type":"string[]"},{"internalType":"address[]","name":"authenticators","type":"address[]"}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"maxVotingDuration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"minVotingDuration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextVotingStrategyIndex","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"proposalValidationStrategy","outputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"view","type":"function","name":"proposals","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"uint32","name":"startBlockNumber","type":"uint32"},{"internalType":"contract IExecutionStrategy","name":"executionStrategy","type":"address"},{"internalType":"uint32","name":"minEndBlockNumber","type":"uint32"},{"internalType":"uint32","name":"maxEndBlockNumber","type":"uint32"},{"internalType":"enum FinalizationStatus","name":"finalizationStatus","type":"uint8"},{"internalType":"bytes32","name":"executionPayloadHash","type":"bytes32"},{"internalType":"uint256","name":"activeVotingStrategies","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"struct Strategy","name":"executionStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"bytes","name":"userProposalValidationParams","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"propose"},{"inputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"struct Strategy","name":"executionStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateProposal"},{"inputs":[{"internalType":"struct UpdateSettingsCalldata","name":"input","type":"tuple","components":[{"internalType":"uint32","name":"minVotingDuration","type":"uint32"},{"internalType":"uint32","name":"maxVotingDuration","type":"uint32"},{"internalType":"uint32","name":"votingDelay","type":"uint32"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"string","name":"daoURI","type":"string"},{"internalType":"struct Strategy","name":"proposalValidationStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"proposalValidationStrategyMetadataURI","type":"string"},{"internalType":"address[]","name":"authenticatorsToAdd","type":"address[]"},{"internalType":"address[]","name":"authenticatorsToRemove","type":"address[]"},{"internalType":"struct Strategy[]","name":"votingStrategiesToAdd","type":"tuple[]","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string[]","name":"votingStrategyMetadataURIsToAdd","type":"string[]"},{"internalType":"uint8[]","name":"votingStrategiesToRemove","type":"uint8[]"}]}],"stateMutability":"nonpayable","type":"function","name":"updateSettings"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"enum Choice","name":"choice","type":"uint8"},{"internalType":"struct IndexedStrategy[]","name":"userVotingStrategies","type":"tuple[]","components":[{"internalType":"uint8","name":"index","type":"uint8"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"vote"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"enum Choice","name":"choice","type":"uint8"}],"stateMutability":"view","type":"function","name":"votePower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"stateMutability":"view","type":"function","name":"voteRegistry","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"votingDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"index","type":"uint8"}],"stateMutability":"view","type":"function","name":"votingStrategies","outputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"activeVotingStrategies()":{"details":"The index of each bit corresponds to whether the strategy at that index       in `votingStrategies` is active."},"cancel(uint256)":{"params":{"proposalId":"The proposal to cancel."}},"execute(uint256,bytes)":{"params":{"executionPayload":"The execution payload.","proposalId":"The proposal id."}},"getProposalStatus(uint256)":{"params":{"proposalId":"The ID of the proposal."},"returns":{"_0":"The status of the proposal. Refer to the `ProposalStatus` enum for more information."}},"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))":{"details":"A struct is used here because of solidity's stack constraints.","params":{"input":"The space initialization parameters, Consists of:          owner  The address of the space owner.          votingDelay  The delay between the creation of a proposal and the start of the voting period.          minVotingDuration  The minimum duration of the voting period.          maxVotingDuration  The maximum duration of the voting period.          proposalValidationStrategy  The strategy to use to validate a proposal,             consisting of a strategy address and an array of configuration parameters.          proposalValidationStrategyMetadataURI  The metadata URI for `proposalValidationStrategy`.          daoURI  The ERC4824 DAO URI for the space.          metadataURI  The metadata URI for the space.          votingStrategies  The whitelisted voting strategies,             each consisting of a strategy address and an array of configuration parameters.          votingStrategyMetadataURIs  The metadata URIs for `votingStrategies`.          authenticators The whitelisted authenticator addresses."}},"proposalValidationStrategy()":{"returns":{"addr":"The address of the proposal validation strategy.","params":"The parameters of the proposal validation strategy."}},"proposals(uint256)":{"details":"Returns all zeros if the proposal does not exist.","params":{"proposalId":"The ID of the proposal."},"returns":{"activeVotingStrategies":"The bit array of the active voting strategies for the proposal.","author":"The address of the proposal author.","executionPayloadHash":"The keccak256 hash of the execution payload.","executionStrategy":"The address of the execution strategy used in the proposal.","finalizationStatus":"The finalization status of the proposal. See `FinalizationStatus`.","maxEndBlockNumber":"The block number of the maximum end of the voting period.","minEndBlockNumber":"The block number of the minimum end of the voting period.","startBlockNumber":"The block number of the start of the voting period.         This is also the snapshot block number where voting power is calculated at."}},"propose(address,string,(address,bytes),bytes)":{"params":{"author":"The address of the proposal creator.","executionStrategy":"The execution strategy for the proposal,          consisting of a strategy address and an execution payload.","metadataURI":"The metadata URI for the proposal.","userProposalValidationParams":"The user provided parameters for proposal validation."}},"updateProposal(address,uint256,(address,bytes),string)":{"params":{"executionStrategy":"The new execution strategy.","metadataURI":"The new metadata URI.","proposalId":"The id of the proposal to edit."}},"updateSettings((uint32,uint32,uint32,string,string,(address,bytes),string,address[],address[],(address,bytes)[],string[],uint8[]))":{"details":"The structure should consist of:     minVotingDuration The new minimum voting duration. Set to `NO_UPDATE_UINT32` to ignore.     maxVotingDuration The new maximum voting duration. Set to `NO_UPDATE_UINT32` to ignore.     votingDelay The new voting delay. Set to `NO_UPDATE_UINT32` to ignore.     metadataURI The new metadataURI. Set to `NO_UPDATE_STRING` to ignore.     daoURI The new daoURI. Set to `NO_UPDATE_STRING` to ignore.     proposalValidationStrategy The new proposal validation strategy to use. Set                 to `NO_UPDATE_STRATEGY` to ignore.     proposalValidationStrategyMetadataURI The new metadata URI for the proposal validation strategy.     authenticatorsToAdd The authenticators to add. Set to an empty array to ignore.     authenticatorsToRemove The authenticators to remove. Set to an empty array to ignore.     votingStrategiesToAdd The voting strategies to add. Set to an empty array to ignore.     votingStrategyMetadataURIsToAdd The voting strategy metadata uris to add. Set to                 an empty array to ignore.     votignStrategiesToRemove The indices of voting strategies to remove. Set to empty array to ignore.","params":{"input":"The settings to modify"}},"vote(address,uint256,uint8,(uint8,bytes)[],string)":{"params":{"choice":"The vote choice  (`For`, `Against`, `Abstain`).","metadataURI":"An optional metadata to give information about the vote.","proposalId":"The proposal id.","userVotingStrategies":"The strategies to use to compute the voter's voting power,          each consisting of a strategy index and an array of user provided parameters.","voter":"The voter's address."}},"votePower(uint256,uint8)":{"params":{"choice":"The choice of the voter.","proposalId":"The ID of the proposal."}},"voteRegistry(uint256,address)":{"params":{"proposalId":"The ID of the proposal.","voter":"The address of the voter."}},"votingStrategies(uint8)":{"params":{"index":"The index of the voting strategy."},"returns":{"addr":"The address of the voting strategy.","params":"The parameters of the voting strategy."}}},"version":1},"userdoc":{"kind":"user","methods":{"activeVotingStrategies()":{"notice":"The bit array of the current active voting strategies."},"authenticators(address)":{"notice":"Returns whether a given address is a whitelisted authenticator."},"cancel(uint256)":{"notice":"Cancels a proposal that has not already been finalized."},"execute(uint256,bytes)":{"notice":"Executes a proposal."},"getProposalStatus(uint256)":{"notice":"Returns the status of a proposal."},"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))":{"notice":"Initializes a space proxy after deployment."},"maxVotingDuration()":{"notice":"The maximum duration of the voting period."},"minVotingDuration()":{"notice":"The minimum duration of the voting period."},"nextProposalId()":{"notice":"A pointer to the next available voting strategy index."},"nextVotingStrategyIndex()":{"notice":"The index of the next available voting strategy."},"proposalValidationStrategy()":{"notice":"The proposal validation strategy."},"proposals(uint256)":{"notice":"Returns the proposal at a given ID."},"propose(address,string,(address,bytes),bytes)":{"notice":"Creates a proposal."},"updateProposal(address,uint256,(address,bytes),string)":{"notice":"Updates the proposal execution strategy and metadata."},"updateSettings((uint32,uint32,uint32,string,string,(address,bytes),string,address[],address[],(address,bytes)[],string[],uint8[]))":{"notice":"Updates the settings."},"vote(address,uint256,uint8,(uint8,bytes)[],string)":{"notice":"Casts a vote."},"votePower(uint256,uint8)":{"notice":"Returns the voting power of a choice on a proposal."},"voteRegistry(uint256,address)":{"notice":"Returns whether a voter has voted on a proposal."},"votingDelay()":{"notice":"The delay between proposal creation and the start of the voting period."},"votingStrategies(uint8)":{"notice":"Returns the voting strategy at a given index."}},"version":1}},"settings":{"remappings":["@gnosis.pm/safe-contracts/=lib/safe-contracts/","@murky/=lib/murky/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@zodiac/=lib/zodiac/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","safe-contracts/=lib/safe-contracts/contracts/","zodiac/=lib/zodiac/contracts/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/ISpace.sol":"ISpace"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/safe-contracts/contracts/common/Enum.sol":{"keccak256":"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f","urls":["bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d","dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"],"license":"LGPL-3.0-only"},"src/interfaces/IExecutionStrategy.sol":{"keccak256":"0x9b9679eff484ba280e87813d75011d80a3001c0aefb6f50c7a4ca5110c842173","urls":["bzz-raw://cc195aca37c2e778fd58f367191cee3c16a9cf03eeb13be387d650e92866dfcd","dweb:/ipfs/QmW4sJB3i3ZGUtJx3hUuuiVfEHVFvpxFufv3zM8QxuJPDu"],"license":"MIT"},"src/interfaces/ISpace.sol":{"keccak256":"0x5b2bfc614be17c6d734d7daffa964260d8e2bf75f5acbf9e98ac436a4f11d936","urls":["bzz-raw://f47afa233f4a81edf7c79c01778988f07a7b7f54bab13d774f318c935eccb307","dweb:/ipfs/Qmd9sPV4HycLmSQnAjwfboU5Fc4yCY6AhohJfpm14gDSZw"],"license":"MIT"},"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol":{"keccak256":"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430","urls":["bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a","dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb"],"license":"MIT"},"src/interfaces/space/ISpaceActions.sol":{"keccak256":"0x4516b8aebfb7c4b34365844bb0d90b7a2ed416196be9c9080623a2c97b9fbced","urls":["bzz-raw://86be183223ac3faaea8e35c1db72160926bfb5329cde6751e4dcb76d81a6c8d9","dweb:/ipfs/QmVmf2Y2hdAQtHBHNXc29MysVuem3Tn31BHWMWfrWMGB3N"],"license":"MIT"},"src/interfaces/space/ISpaceErrors.sol":{"keccak256":"0x204e2fbb17a2e84a57ab4bd3f19a33dddd19cfb985a59968396110548ed51d81","urls":["bzz-raw://6ad961b7ffd9981606ae35f59b2dce5e928cdc98c7cb089b37bf5df5a6338386","dweb:/ipfs/QmRDiwWYR9pvgSXayA9Y1Ap3NXYwSBgK5Jd3Fm4PkJu7FQ"],"license":"MIT"},"src/interfaces/space/ISpaceEvents.sol":{"keccak256":"0x6363f664496c76ce08370bdaebc9a0cf725b18c031a7a2b87bfea6c424402e7b","urls":["bzz-raw://fbe42a0ad38834b0b307dbea609ab2b0f0617a6df867d103a3b25978d84c212c","dweb:/ipfs/QmbxNhbr247TsQH6UoHg6vmJFXSL6vaTbViBW2fddXQDXR"],"license":"MIT"},"src/interfaces/space/ISpaceOwnerActions.sol":{"keccak256":"0xb97b08a44ca04477f3e7f0761542a8df6c88300f761cc7fac0a47faf7016669a","urls":["bzz-raw://354f3a9d3bc1cf627b9ea5f88eea898a406afd95b7d35aed043cda117193a40a","dweb:/ipfs/QmeeinePhbg43MVS9jdWjVPrwZVJvU8hTfUY3onntRF4qn"],"license":"MIT"},"src/interfaces/space/ISpaceState.sol":{"keccak256":"0xfc38073b6fe97649ead1f34ce375a94d1382249e73cef52228c4083053c52910","urls":["bzz-raw://ae757bc860af9d2bf83c8d4f31a44b49bb9236c756746328ad872f0fd00703cb","dweb:/ipfs/QmQ3U62NjbygadR9Wv1JaTwMYjMsL4tDzecL3PxotEsK7u"],"license":"MIT"},"src/types.sol":{"keccak256":"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4","urls":["bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f","dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/interfaces/ISpace.sol","id":63377,"exportedSymbols":{"ISpace":[63376],"ISpaceActions":[63500],"ISpaceErrors":[63564],"ISpaceEvents":[63703],"ISpaceOwnerActions":[63723],"ISpaceState":[63851]},"nodeType":"SourceUnit","src":"33:496:102","nodes":[{"id":63354,"nodeType":"PragmaDirective","src":"33:24:102","nodes":[],"literals":["solidity","^","0.8",".18"]},{"id":63356,"nodeType":"ImportDirective","src":"59:54:102","nodes":[],"absolutePath":"src/interfaces/space/ISpaceState.sol","file":"./space/ISpaceState.sol","nameLocation":"-1:-1:-1","scope":63377,"sourceUnit":63852,"symbolAliases":[{"foreign":{"id":63355,"name":"ISpaceState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63851,"src":"68:11:102","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63358,"nodeType":"ImportDirective","src":"114:58:102","nodes":[],"absolutePath":"src/interfaces/space/ISpaceActions.sol","file":"./space/ISpaceActions.sol","nameLocation":"-1:-1:-1","scope":63377,"sourceUnit":63501,"symbolAliases":[{"foreign":{"id":63357,"name":"ISpaceActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63500,"src":"123:13:102","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63360,"nodeType":"ImportDirective","src":"173:68:102","nodes":[],"absolutePath":"src/interfaces/space/ISpaceOwnerActions.sol","file":"./space/ISpaceOwnerActions.sol","nameLocation":"-1:-1:-1","scope":63377,"sourceUnit":63724,"symbolAliases":[{"foreign":{"id":63359,"name":"ISpaceOwnerActions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63723,"src":"182:18:102","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63362,"nodeType":"ImportDirective","src":"242:56:102","nodes":[],"absolutePath":"src/interfaces/space/ISpaceEvents.sol","file":"./space/ISpaceEvents.sol","nameLocation":"-1:-1:-1","scope":63377,"sourceUnit":63704,"symbolAliases":[{"foreign":{"id":63361,"name":"ISpaceEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63703,"src":"251:12:102","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63364,"nodeType":"ImportDirective","src":"299:56:102","nodes":[],"absolutePath":"src/interfaces/space/ISpaceErrors.sol","file":"./space/ISpaceErrors.sol","nameLocation":"-1:-1:-1","scope":63377,"sourceUnit":63565,"symbolAliases":[{"foreign":{"id":63363,"name":"ISpaceErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63564,"src":"308:12:102","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63376,"nodeType":"ContractDefinition","src":"429:99:102","nodes":[],"abstract":false,"baseContracts":[{"baseName":{"id":63366,"name":"ISpaceState","nameLocations":["449:11:102"],"nodeType":"IdentifierPath","referencedDeclaration":63851,"src":"449:11:102"},"id":63367,"nodeType":"InheritanceSpecifier","src":"449:11:102"},{"baseName":{"id":63368,"name":"ISpaceActions","nameLocations":["462:13:102"],"nodeType":"IdentifierPath","referencedDeclaration":63500,"src":"462:13:102"},"id":63369,"nodeType":"InheritanceSpecifier","src":"462:13:102"},{"baseName":{"id":63370,"name":"ISpaceOwnerActions","nameLocations":["477:18:102"],"nodeType":"IdentifierPath","referencedDeclaration":63723,"src":"477:18:102"},"id":63371,"nodeType":"InheritanceSpecifier","src":"477:18:102"},{"baseName":{"id":63372,"name":"ISpaceEvents","nameLocations":["497:12:102"],"nodeType":"IdentifierPath","referencedDeclaration":63703,"src":"497:12:102"},"id":63373,"nodeType":"InheritanceSpecifier","src":"497:12:102"},{"baseName":{"id":63374,"name":"ISpaceErrors","nameLocations":["511:12:102"],"nodeType":"IdentifierPath","referencedDeclaration":63564,"src":"511:12:102"},"id":63375,"nodeType":"InheritanceSpecifier","src":"511:12:102"}],"canonicalName":"ISpace","contractDependencies":[],"contractKind":"interface","documentation":{"id":63365,"nodeType":"StructuredDocumentation","src":"357:27:102","text":"@title Space Interface"},"fullyImplemented":false,"linearizedBaseContracts":[63376,63564,63703,63723,63500,63851],"name":"ISpace","nameLocation":"439:6:102","scope":63377,"usedErrors":[63510,63513,63516,63519,63522,63527,63530,63533,63536,63539,63542,63545,63548,63551,63554,63557,63560,63563]}],"license":"MIT"},"id":102}