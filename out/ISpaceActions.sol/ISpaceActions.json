{"abi":[{"type":"function","name":"execute","inputs":[{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"executionPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"input","type":"tuple","internalType":"struct InitializeCalldata","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"votingDelay","type":"uint32","internalType":"uint32"},{"name":"minVotingDuration","type":"uint32","internalType":"uint32"},{"name":"maxVotingDuration","type":"uint32","internalType":"uint32"},{"name":"proposalValidationStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"proposalValidationStrategyMetadataURI","type":"string","internalType":"string"},{"name":"daoURI","type":"string","internalType":"string"},{"name":"metadataURI","type":"string","internalType":"string"},{"name":"votingStrategies","type":"tuple[]","internalType":"struct Strategy[]","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"votingStrategyMetadataURIs","type":"string[]","internalType":"string[]"},{"name":"authenticators","type":"address[]","internalType":"address[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"propose","inputs":[{"name":"author","type":"address","internalType":"address"},{"name":"metadataURI","type":"string","internalType":"string"},{"name":"executionStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"userProposalValidationParams","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateProposal","inputs":[{"name":"author","type":"address","internalType":"address"},{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"executionStrategy","type":"tuple","internalType":"struct Strategy","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vote","inputs":[{"name":"voter","type":"address","internalType":"address"},{"name":"proposalId","type":"uint256","internalType":"uint256"},{"name":"choice","type":"uint8","internalType":"enum Choice"},{"name":"userVotingStrategies","type":"tuple[]","internalType":"struct IndexedStrategy[]","components":[{"name":"index","type":"uint8","internalType":"uint8"},{"name":"params","type":"bytes","internalType":"bytes"}]},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"execute(uint256,bytes)":"59efcb15","initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))":"f8b669d6","propose(address,string,(address,bytes),bytes)":"aad83f3b","updateProposal(address,uint256,(address,bytes),string)":"0b515570","vote(address,uint256,uint8,(uint8,bytes)[],string)":"bc7e56f0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"executionPayload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"votingDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minVotingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxVotingDuration\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"proposalValidationStrategy\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"proposalValidationStrategyMetadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"daoURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"votingStrategies\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"votingStrategyMetadataURIs\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"authenticators\",\"type\":\"address[]\"}],\"internalType\":\"struct InitializeCalldata\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"userProposalValidationParams\",\"type\":\"bytes\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct Strategy\",\"name\":\"executionStrategy\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"enum Choice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct IndexedStrategy[]\",\"name\":\"userVotingStrategies\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute(uint256,bytes)\":{\"params\":{\"executionPayload\":\"The execution payload.\",\"proposalId\":\"The proposal id.\"}},\"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))\":{\"details\":\"A struct is used here because of solidity's stack constraints.\",\"params\":{\"input\":\"The space initialization parameters, Consists of:          owner  The address of the space owner.          votingDelay  The delay between the creation of a proposal and the start of the voting period.          minVotingDuration  The minimum duration of the voting period.          maxVotingDuration  The maximum duration of the voting period.          proposalValidationStrategy  The strategy to use to validate a proposal,             consisting of a strategy address and an array of configuration parameters.          proposalValidationStrategyMetadataURI  The metadata URI for `proposalValidationStrategy`.          daoURI  The ERC4824 DAO URI for the space.          metadataURI  The metadata URI for the space.          votingStrategies  The whitelisted voting strategies,             each consisting of a strategy address and an array of configuration parameters.          votingStrategyMetadataURIs  The metadata URIs for `votingStrategies`.          authenticators The whitelisted authenticator addresses.\"}},\"propose(address,string,(address,bytes),bytes)\":{\"params\":{\"author\":\"The address of the proposal creator.\",\"executionStrategy\":\"The execution strategy for the proposal,          consisting of a strategy address and an execution payload.\",\"metadataURI\":\"The metadata URI for the proposal.\",\"userProposalValidationParams\":\"The user provided parameters for proposal validation.\"}},\"updateProposal(address,uint256,(address,bytes),string)\":{\"params\":{\"executionStrategy\":\"The new execution strategy.\",\"metadataURI\":\"The new metadata URI.\",\"proposalId\":\"The id of the proposal to edit.\"}},\"vote(address,uint256,uint8,(uint8,bytes)[],string)\":{\"params\":{\"choice\":\"The vote choice  (`For`, `Against`, `Abstain`).\",\"metadataURI\":\"An optional metadata to give information about the vote.\",\"proposalId\":\"The proposal id.\",\"userVotingStrategies\":\"The strategies to use to compute the voter's voting power,          each consisting of a strategy index and an array of user provided parameters.\",\"voter\":\"The voter's address.\"}}},\"title\":\"Space Actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(uint256,bytes)\":{\"notice\":\"Executes a proposal.\"},\"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))\":{\"notice\":\"Initializes a space proxy after deployment.\"},\"propose(address,string,(address,bytes),bytes)\":{\"notice\":\"Creates a proposal.\"},\"updateProposal(address,uint256,(address,bytes),string)\":{\"notice\":\"Updates the proposal execution strategy and metadata.\"},\"vote(address,uint256,uint8,(uint8,bytes)[],string)\":{\"notice\":\"Casts a vote.\"}},\"notice\":\"User focused actions that can be performed on a space.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/space/ISpaceActions.sol\":\"ISpaceActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@murky/=lib/murky/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"src/interfaces/IExecutionStrategy.sol\":{\"keccak256\":\"0x9b9679eff484ba280e87813d75011d80a3001c0aefb6f50c7a4ca5110c842173\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc195aca37c2e778fd58f367191cee3c16a9cf03eeb13be387d650e92866dfcd\",\"dweb:/ipfs/QmW4sJB3i3ZGUtJx3hUuuiVfEHVFvpxFufv3zM8QxuJPDu\"]},\"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol\":{\"keccak256\":\"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a\",\"dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb\"]},\"src/interfaces/space/ISpaceActions.sol\":{\"keccak256\":\"0x4516b8aebfb7c4b34365844bb0d90b7a2ed416196be9c9080623a2c97b9fbced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86be183223ac3faaea8e35c1db72160926bfb5329cde6751e4dcb76d81a6c8d9\",\"dweb:/ipfs/QmVmf2Y2hdAQtHBHNXc29MysVuem3Tn31BHWMWfrWMGB3N\"]},\"src/types.sol\":{\"keccak256\":\"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f\",\"dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bytes","name":"executionPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[{"internalType":"struct InitializeCalldata","name":"input","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"votingDelay","type":"uint32"},{"internalType":"uint32","name":"minVotingDuration","type":"uint32"},{"internalType":"uint32","name":"maxVotingDuration","type":"uint32"},{"internalType":"struct Strategy","name":"proposalValidationStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"proposalValidationStrategyMetadataURI","type":"string"},{"internalType":"string","name":"daoURI","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"struct Strategy[]","name":"votingStrategies","type":"tuple[]","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string[]","name":"votingStrategyMetadataURIs","type":"string[]"},{"internalType":"address[]","name":"authenticators","type":"address[]"}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"struct Strategy","name":"executionStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"bytes","name":"userProposalValidationParams","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"propose"},{"inputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"struct Strategy","name":"executionStrategy","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateProposal"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"enum Choice","name":"choice","type":"uint8"},{"internalType":"struct IndexedStrategy[]","name":"userVotingStrategies","type":"tuple[]","components":[{"internalType":"uint8","name":"index","type":"uint8"},{"internalType":"bytes","name":"params","type":"bytes"}]},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"vote"}],"devdoc":{"kind":"dev","methods":{"execute(uint256,bytes)":{"params":{"executionPayload":"The execution payload.","proposalId":"The proposal id."}},"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))":{"details":"A struct is used here because of solidity's stack constraints.","params":{"input":"The space initialization parameters, Consists of:          owner  The address of the space owner.          votingDelay  The delay between the creation of a proposal and the start of the voting period.          minVotingDuration  The minimum duration of the voting period.          maxVotingDuration  The maximum duration of the voting period.          proposalValidationStrategy  The strategy to use to validate a proposal,             consisting of a strategy address and an array of configuration parameters.          proposalValidationStrategyMetadataURI  The metadata URI for `proposalValidationStrategy`.          daoURI  The ERC4824 DAO URI for the space.          metadataURI  The metadata URI for the space.          votingStrategies  The whitelisted voting strategies,             each consisting of a strategy address and an array of configuration parameters.          votingStrategyMetadataURIs  The metadata URIs for `votingStrategies`.          authenticators The whitelisted authenticator addresses."}},"propose(address,string,(address,bytes),bytes)":{"params":{"author":"The address of the proposal creator.","executionStrategy":"The execution strategy for the proposal,          consisting of a strategy address and an execution payload.","metadataURI":"The metadata URI for the proposal.","userProposalValidationParams":"The user provided parameters for proposal validation."}},"updateProposal(address,uint256,(address,bytes),string)":{"params":{"executionStrategy":"The new execution strategy.","metadataURI":"The new metadata URI.","proposalId":"The id of the proposal to edit."}},"vote(address,uint256,uint8,(uint8,bytes)[],string)":{"params":{"choice":"The vote choice  (`For`, `Against`, `Abstain`).","metadataURI":"An optional metadata to give information about the vote.","proposalId":"The proposal id.","userVotingStrategies":"The strategies to use to compute the voter's voting power,          each consisting of a strategy index and an array of user provided parameters.","voter":"The voter's address."}}},"version":1},"userdoc":{"kind":"user","methods":{"execute(uint256,bytes)":{"notice":"Executes a proposal."},"initialize((address,uint32,uint32,uint32,(address,bytes),string,string,string,(address,bytes)[],string[],address[]))":{"notice":"Initializes a space proxy after deployment."},"propose(address,string,(address,bytes),bytes)":{"notice":"Creates a proposal."},"updateProposal(address,uint256,(address,bytes),string)":{"notice":"Updates the proposal execution strategy and metadata."},"vote(address,uint256,uint8,(uint8,bytes)[],string)":{"notice":"Casts a vote."}},"version":1}},"settings":{"remappings":["@gnosis.pm/safe-contracts/=lib/safe-contracts/","@murky/=lib/murky/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@zodiac/=lib/zodiac/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","safe-contracts/=lib/safe-contracts/contracts/","zodiac/=lib/zodiac/contracts/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/space/ISpaceActions.sol":"ISpaceActions"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/safe-contracts/contracts/common/Enum.sol":{"keccak256":"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f","urls":["bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d","dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"],"license":"LGPL-3.0-only"},"src/interfaces/IExecutionStrategy.sol":{"keccak256":"0x9b9679eff484ba280e87813d75011d80a3001c0aefb6f50c7a4ca5110c842173","urls":["bzz-raw://cc195aca37c2e778fd58f367191cee3c16a9cf03eeb13be387d650e92866dfcd","dweb:/ipfs/QmW4sJB3i3ZGUtJx3hUuuiVfEHVFvpxFufv3zM8QxuJPDu"],"license":"MIT"},"src/interfaces/execution-strategies/IExecutionStrategyErrors.sol":{"keccak256":"0x8a1c904a4f3573013dbe8b55e3322dc929c9d6e56dc4cfe7a8e7866834661430","urls":["bzz-raw://358d063db15582f772bd49400a90b5087fa6768068581494f87a5ba1eb9ef20a","dweb:/ipfs/QmSovbYrxxMXvyhWTfAuZYcUDhJ1VRZca4XjiE1e8vv9Yb"],"license":"MIT"},"src/interfaces/space/ISpaceActions.sol":{"keccak256":"0x4516b8aebfb7c4b34365844bb0d90b7a2ed416196be9c9080623a2c97b9fbced","urls":["bzz-raw://86be183223ac3faaea8e35c1db72160926bfb5329cde6751e4dcb76d81a6c8d9","dweb:/ipfs/QmVmf2Y2hdAQtHBHNXc29MysVuem3Tn31BHWMWfrWMGB3N"],"license":"MIT"},"src/types.sol":{"keccak256":"0xcdc5465d75fd7bdbde15892a0ef01f16fb8ab48907e4183acb860af91c93fee4","urls":["bzz-raw://bc76c16a6ecc59eb6dc5c53d032d691f8bc08b417d41ef87960a54713bbd2e7f","dweb:/ipfs/QmZbvxxmZEyus5hX5ThYD6qDuaTjpWR8FLZLGTEDKKBDsb"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/interfaces/space/ISpaceActions.sol","id":63501,"exportedSymbols":{"Choice":[64127],"ISpaceActions":[63500],"IndexedStrategy":[64111],"InitializeCalldata":[64167],"Strategy":[64106]},"nodeType":"SourceUnit","src":"33:3526:107","nodes":[{"id":63435,"nodeType":"PragmaDirective","src":"33:24:107","nodes":[],"literals":["solidity","^","0.8",".18"]},{"id":63440,"nodeType":"ImportDirective","src":"59:86:107","nodes":[],"absolutePath":"src/types.sol","file":"src/types.sol","nameLocation":"-1:-1:-1","scope":63501,"sourceUnit":64200,"symbolAliases":[{"foreign":{"id":63436,"name":"Choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64127,"src":"68:6:107","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":63437,"name":"IndexedStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64111,"src":"76:15:107","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":63438,"name":"Strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64106,"src":"93:8:107","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":63439,"name":"InitializeCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64167,"src":"103:18:107","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63500,"nodeType":"ContractDefinition","src":"239:3319:107","nodes":[{"id":63448,"nodeType":"FunctionDefinition","src":"1548:64:107","nodes":[],"documentation":{"id":63442,"nodeType":"StructuredDocumentation","src":"269:1274:107","text":"@notice  Initializes a space proxy after deployment.\n @param   input  The space initialization parameters, Consists of:\n          owner  The address of the space owner.\n          votingDelay  The delay between the creation of a proposal and the start of the voting period.\n          minVotingDuration  The minimum duration of the voting period.\n          maxVotingDuration  The maximum duration of the voting period.\n          proposalValidationStrategy  The strategy to use to validate a proposal,\n             consisting of a strategy address and an array of configuration parameters.\n          proposalValidationStrategyMetadataURI  The metadata URI for `proposalValidationStrategy`.\n          daoURI  The ERC4824 DAO URI for the space.\n          metadataURI  The metadata URI for the space.\n          votingStrategies  The whitelisted voting strategies,\n             each consisting of a strategy address and an array of configuration parameters.\n          votingStrategyMetadataURIs  The metadata URIs for `votingStrategies`.\n          authenticators The whitelisted authenticator addresses.\n @dev A struct is used here because of solidity's stack constraints."},"functionSelector":"f8b669d6","implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1557:10:107","parameters":{"id":63446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63445,"mutability":"mutable","name":"input","nameLocation":"1596:5:107","nodeType":"VariableDeclaration","scope":63448,"src":"1568:33:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeCalldata_$64167_calldata_ptr","typeString":"struct InitializeCalldata"},"typeName":{"id":63444,"nodeType":"UserDefinedTypeName","pathNode":{"id":63443,"name":"InitializeCalldata","nameLocations":["1568:18:107"],"nodeType":"IdentifierPath","referencedDeclaration":64167,"src":"1568:18:107"},"referencedDeclaration":64167,"src":"1568:18:107","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeCalldata_$64167_storage_ptr","typeString":"struct InitializeCalldata"}},"visibility":"internal"}],"src":"1567:35:107"},"returnParameters":{"id":63447,"nodeType":"ParameterList","parameters":[],"src":"1611:0:107"},"scope":63500,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":63461,"nodeType":"FunctionDefinition","src":"2036:191:107","nodes":[],"documentation":{"id":63449,"nodeType":"StructuredDocumentation","src":"1618:413:107","text":"@notice  Creates a proposal.\n @param   author  The address of the proposal creator.\n @param   metadataURI  The metadata URI for the proposal.\n @param   executionStrategy  The execution strategy for the proposal,\n          consisting of a strategy address and an execution payload.\n @param   userProposalValidationParams  The user provided parameters for proposal validation."},"functionSelector":"aad83f3b","implemented":false,"kind":"function","modifiers":[],"name":"propose","nameLocation":"2045:7:107","parameters":{"id":63459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63451,"mutability":"mutable","name":"author","nameLocation":"2070:6:107","nodeType":"VariableDeclaration","scope":63461,"src":"2062:14:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63450,"name":"address","nodeType":"ElementaryTypeName","src":"2062:7:107","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63453,"mutability":"mutable","name":"metadataURI","nameLocation":"2102:11:107","nodeType":"VariableDeclaration","scope":63461,"src":"2086:27:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":63452,"name":"string","nodeType":"ElementaryTypeName","src":"2086:6:107","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":63456,"mutability":"mutable","name":"executionStrategy","nameLocation":"2141:17:107","nodeType":"VariableDeclaration","scope":63461,"src":"2123:35:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Strategy_$64106_calldata_ptr","typeString":"struct Strategy"},"typeName":{"id":63455,"nodeType":"UserDefinedTypeName","pathNode":{"id":63454,"name":"Strategy","nameLocations":["2123:8:107"],"nodeType":"IdentifierPath","referencedDeclaration":64106,"src":"2123:8:107"},"referencedDeclaration":64106,"src":"2123:8:107","typeDescriptions":{"typeIdentifier":"t_struct$_Strategy_$64106_storage_ptr","typeString":"struct Strategy"}},"visibility":"internal"},{"constant":false,"id":63458,"mutability":"mutable","name":"userProposalValidationParams","nameLocation":"2183:28:107","nodeType":"VariableDeclaration","scope":63461,"src":"2168:43:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":63457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2168:5:107","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2052:165:107"},"returnParameters":{"id":63460,"nodeType":"ParameterList","parameters":[],"src":"2226:0:107"},"scope":63500,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":63478,"nodeType":"FunctionDefinition","src":"2708:197:107","nodes":[],"documentation":{"id":63462,"nodeType":"StructuredDocumentation","src":"2233:470:107","text":"@notice  Casts a vote.\n @param   voter  The voter's address.\n @param   proposalId  The proposal id.\n @param   choice  The vote choice  (`For`, `Against`, `Abstain`).\n @param   userVotingStrategies  The strategies to use to compute the voter's voting power,\n          each consisting of a strategy index and an array of user provided parameters.\n @param   metadataURI  An optional metadata to give information about the vote."},"functionSelector":"bc7e56f0","implemented":false,"kind":"function","modifiers":[],"name":"vote","nameLocation":"2717:4:107","parameters":{"id":63476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63464,"mutability":"mutable","name":"voter","nameLocation":"2739:5:107","nodeType":"VariableDeclaration","scope":63478,"src":"2731:13:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63463,"name":"address","nodeType":"ElementaryTypeName","src":"2731:7:107","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63466,"mutability":"mutable","name":"proposalId","nameLocation":"2762:10:107","nodeType":"VariableDeclaration","scope":63478,"src":"2754:18:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2754:7:107","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63469,"mutability":"mutable","name":"choice","nameLocation":"2789:6:107","nodeType":"VariableDeclaration","scope":63478,"src":"2782:13:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Choice_$64127","typeString":"enum Choice"},"typeName":{"id":63468,"nodeType":"UserDefinedTypeName","pathNode":{"id":63467,"name":"Choice","nameLocations":["2782:6:107"],"nodeType":"IdentifierPath","referencedDeclaration":64127,"src":"2782:6:107"},"referencedDeclaration":64127,"src":"2782:6:107","typeDescriptions":{"typeIdentifier":"t_enum$_Choice_$64127","typeString":"enum Choice"}},"visibility":"internal"},{"constant":false,"id":63473,"mutability":"mutable","name":"userVotingStrategies","nameLocation":"2832:20:107","nodeType":"VariableDeclaration","scope":63478,"src":"2805:47:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_IndexedStrategy_$64111_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IndexedStrategy[]"},"typeName":{"baseType":{"id":63471,"nodeType":"UserDefinedTypeName","pathNode":{"id":63470,"name":"IndexedStrategy","nameLocations":["2805:15:107"],"nodeType":"IdentifierPath","referencedDeclaration":64111,"src":"2805:15:107"},"referencedDeclaration":64111,"src":"2805:15:107","typeDescriptions":{"typeIdentifier":"t_struct$_IndexedStrategy_$64111_storage_ptr","typeString":"struct IndexedStrategy"}},"id":63472,"nodeType":"ArrayTypeName","src":"2805:17:107","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_IndexedStrategy_$64111_storage_$dyn_storage_ptr","typeString":"struct IndexedStrategy[]"}},"visibility":"internal"},{"constant":false,"id":63475,"mutability":"mutable","name":"metadataURI","nameLocation":"2878:11:107","nodeType":"VariableDeclaration","scope":63478,"src":"2862:27:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":63474,"name":"string","nodeType":"ElementaryTypeName","src":"2862:6:107","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2721:174:107"},"returnParameters":{"id":63477,"nodeType":"ParameterList","parameters":[],"src":"2904:0:107"},"scope":63500,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":63486,"nodeType":"FunctionDefinition","src":"3053:79:107","nodes":[],"documentation":{"id":63479,"nodeType":"StructuredDocumentation","src":"2911:137:107","text":"@notice  Executes a proposal.\n @param   proposalId  The proposal id.\n @param   executionPayload  The execution payload."},"functionSelector":"59efcb15","implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3062:7:107","parameters":{"id":63484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63481,"mutability":"mutable","name":"proposalId","nameLocation":"3078:10:107","nodeType":"VariableDeclaration","scope":63486,"src":"3070:18:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:107","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63483,"mutability":"mutable","name":"executionPayload","nameLocation":"3105:16:107","nodeType":"VariableDeclaration","scope":63486,"src":"3090:31:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":63482,"name":"bytes","nodeType":"ElementaryTypeName","src":"3090:5:107","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3069:53:107"},"returnParameters":{"id":63485,"nodeType":"ParameterList","parameters":[],"src":"3131:0:107"},"scope":63500,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":63499,"nodeType":"FunctionDefinition","src":"3383:173:107","nodes":[],"documentation":{"id":63487,"nodeType":"StructuredDocumentation","src":"3138:240:107","text":"@notice  Updates the proposal execution strategy and metadata.\n @param   proposalId The id of the proposal to edit.\n @param   executionStrategy The new execution strategy.\n @param   metadataURI The new metadata URI."},"functionSelector":"0b515570","implemented":false,"kind":"function","modifiers":[],"name":"updateProposal","nameLocation":"3392:14:107","parameters":{"id":63497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63489,"mutability":"mutable","name":"author","nameLocation":"3424:6:107","nodeType":"VariableDeclaration","scope":63499,"src":"3416:14:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63488,"name":"address","nodeType":"ElementaryTypeName","src":"3416:7:107","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63491,"mutability":"mutable","name":"proposalId","nameLocation":"3448:10:107","nodeType":"VariableDeclaration","scope":63499,"src":"3440:18:107","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3440:7:107","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63494,"mutability":"mutable","name":"executionStrategy","nameLocation":"3486:17:107","nodeType":"VariableDeclaration","scope":63499,"src":"3468:35:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Strategy_$64106_calldata_ptr","typeString":"struct Strategy"},"typeName":{"id":63493,"nodeType":"UserDefinedTypeName","pathNode":{"id":63492,"name":"Strategy","nameLocations":["3468:8:107"],"nodeType":"IdentifierPath","referencedDeclaration":64106,"src":"3468:8:107"},"referencedDeclaration":64106,"src":"3468:8:107","typeDescriptions":{"typeIdentifier":"t_struct$_Strategy_$64106_storage_ptr","typeString":"struct Strategy"}},"visibility":"internal"},{"constant":false,"id":63496,"mutability":"mutable","name":"metadataURI","nameLocation":"3529:11:107","nodeType":"VariableDeclaration","scope":63499,"src":"3513:27:107","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":63495,"name":"string","nodeType":"ElementaryTypeName","src":"3513:6:107","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3406:140:107"},"returnParameters":{"id":63498,"nodeType":"ParameterList","parameters":[],"src":"3555:0:107"},"scope":63500,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISpaceActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":63441,"nodeType":"StructuredDocumentation","src":"147:92:107","text":"@title Space Actions\n @notice User focused actions that can be performed on a space."},"fullyImplemented":false,"linearizedBaseContracts":[63500],"name":"ISpaceActions","nameLocation":"249:13:107","scope":63501,"usedErrors":[]}],"license":"MIT"},"id":107}