{"abi":[{"type":"function","name":"getVotingPower","inputs":[{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"voter","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"},{"name":"userParams","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"votingPower","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getVotingPower(uint32,address,bytes,bytes)":"871d81b7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userParams\",\"type\":\"bytes\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVotingPower(uint32,address,bytes,bytes)\":{\"params\":{\"blockNumber\":\"The snapshot block number to get the voting power at.\",\"params\":\"The global parameters that can configure the voting strategy for a particular Space.\",\"userParams\":\"The user parameters that can be used in the voting strategy computation.\",\"voter\":\"The address to get the voting power of.\"},\"returns\":{\"votingPower\":\"The voting power of the address at the given block number. If there is no voting power,                     return 0.\"}}},\"title\":\"Voting Strategy Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getVotingPower(uint32,address,bytes,bytes)\":{\"notice\":\"Gets the voting power of an address at a given block number.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IVotingStrategy.sol\":\"IVotingStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@murky/=lib/murky/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IVotingStrategy.sol\":{\"keccak256\":\"0xb97999d3a8b99bbd2d2ab6af81c713e58712c8f64a8b5fd05650ea8402ac4e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58fdfe331e3da03708393ab00678ae33f2fe2b9bca780484c8e5aec1577733f4\",\"dweb:/ipfs/QmQG3vMGucyfhucH4e4Myikn41bntXH5QpsDSYS8kCbtF5\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"address","name":"voter","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"bytes","name":"userParams","type":"bytes"}],"stateMutability":"view","type":"function","name":"getVotingPower","outputs":[{"internalType":"uint256","name":"votingPower","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getVotingPower(uint32,address,bytes,bytes)":{"params":{"blockNumber":"The snapshot block number to get the voting power at.","params":"The global parameters that can configure the voting strategy for a particular Space.","userParams":"The user parameters that can be used in the voting strategy computation.","voter":"The address to get the voting power of."},"returns":{"votingPower":"The voting power of the address at the given block number. If there is no voting power,                     return 0."}}},"version":1},"userdoc":{"kind":"user","methods":{"getVotingPower(uint32,address,bytes,bytes)":{"notice":"Gets the voting power of an address at a given block number."}},"version":1}},"settings":{"remappings":["@gnosis.pm/safe-contracts/=lib/safe-contracts/","@murky/=lib/murky/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@zodiac/=lib/zodiac/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","safe-contracts/=lib/safe-contracts/contracts/","zodiac/=lib/zodiac/contracts/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/IVotingStrategy.sol":"IVotingStrategy"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/interfaces/IVotingStrategy.sol":{"keccak256":"0xb97999d3a8b99bbd2d2ab6af81c713e58712c8f64a8b5fd05650ea8402ac4e3e","urls":["bzz-raw://58fdfe331e3da03708393ab00678ae33f2fe2b9bca780484c8e5aec1577733f4","dweb:/ipfs/QmQG3vMGucyfhucH4e4Myikn41bntXH5QpsDSYS8kCbtF5"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/interfaces/IVotingStrategy.sol","id":63395,"exportedSymbols":{"IVotingStrategy":[63394]},"nodeType":"SourceUnit","src":"33:868:103","nodes":[{"id":63378,"nodeType":"PragmaDirective","src":"33:24:103","nodes":[],"literals":["solidity","^","0.8",".18"]},{"id":63394,"nodeType":"ContractDefinition","src":"96:804:103","nodes":[{"id":63393,"nodeType":"FunctionDefinition","src":"707:191:103","nodes":[],"documentation":{"id":63380,"nodeType":"StructuredDocumentation","src":"128:574:103","text":"@notice Gets the voting power of an address at a given block number.\n @param blockNumber The snapshot block number to get the voting power at.\n @param voter The address to get the voting power of.\n @param params The global parameters that can configure the voting strategy for a particular Space.\n @param userParams The user parameters that can be used in the voting strategy computation.\n @return votingPower The voting power of the address at the given block number. If there is no voting power,\n                     return 0."},"functionSelector":"871d81b7","implemented":false,"kind":"function","modifiers":[],"name":"getVotingPower","nameLocation":"716:14:103","parameters":{"id":63389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63382,"mutability":"mutable","name":"blockNumber","nameLocation":"747:11:103","nodeType":"VariableDeclaration","scope":63393,"src":"740:18:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":63381,"name":"uint32","nodeType":"ElementaryTypeName","src":"740:6:103","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":63384,"mutability":"mutable","name":"voter","nameLocation":"776:5:103","nodeType":"VariableDeclaration","scope":63393,"src":"768:13:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63383,"name":"address","nodeType":"ElementaryTypeName","src":"768:7:103","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63386,"mutability":"mutable","name":"params","nameLocation":"806:6:103","nodeType":"VariableDeclaration","scope":63393,"src":"791:21:103","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":63385,"name":"bytes","nodeType":"ElementaryTypeName","src":"791:5:103","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":63388,"mutability":"mutable","name":"userParams","nameLocation":"837:10:103","nodeType":"VariableDeclaration","scope":63393,"src":"822:25:103","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":63387,"name":"bytes","nodeType":"ElementaryTypeName","src":"822:5:103","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"730:123:103"},"returnParameters":{"id":63392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63391,"mutability":"mutable","name":"votingPower","nameLocation":"885:11:103","nodeType":"VariableDeclaration","scope":63393,"src":"877:19:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63390,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"876:21:103"},"scope":63394,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IVotingStrategy","contractDependencies":[],"contractKind":"interface","documentation":{"id":63379,"nodeType":"StructuredDocumentation","src":"59:37:103","text":"@title Voting Strategy Interface"},"fullyImplemented":false,"linearizedBaseContracts":[63394],"name":"IVotingStrategy","nameLocation":"106:15:103","scope":63395,"usedErrors":[]}],"license":"MIT"},"id":103}