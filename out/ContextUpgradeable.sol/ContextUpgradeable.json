{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@murky/=lib/murky/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@zodiac/=lib/zodiac/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":zodiac/=lib/zodiac/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@gnosis.pm/safe-contracts/=lib/safe-contracts/","@murky/=lib/murky/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/test/=lib/prb-test/src/","@zodiac/=lib/zodiac/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-gas-snapshot/=lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/prb-test/src/","safe-contracts/=lib/safe-contracts/contracts/","zodiac/=lib/zodiac/contracts/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":"ContextUpgradeable"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27","urls":["bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935","dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183","urls":["bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06","dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol","id":47108,"exportedSymbols":{"AddressUpgradeable":[47065],"ContextUpgradeable":[47107],"Initializable":[46645]},"nodeType":"SourceUnit","src":"86:1259:32","nodes":[{"id":47067,"nodeType":"PragmaDirective","src":"86:23:32","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":47068,"nodeType":"ImportDirective","src":"110:42:32","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":47108,"sourceUnit":46646,"symbolAliases":[],"unitAlias":""},{"id":47107,"nodeType":"ContractDefinition","src":"651:693:32","nodes":[{"id":47077,"nodeType":"FunctionDefinition","src":"711:59:32","nodes":[],"body":{"id":47076,"nodeType":"Block","src":"763:7:32","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":47074,"kind":"modifierInvocation","modifierName":{"id":47073,"name":"onlyInitializing","nameLocations":["746:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":46590,"src":"746:16:32"},"nodeType":"ModifierInvocation","src":"746:16:32"}],"name":"__Context_init","nameLocation":"720:14:32","parameters":{"id":47072,"nodeType":"ParameterList","parameters":[],"src":"734:2:32"},"returnParameters":{"id":47075,"nodeType":"ParameterList","parameters":[],"src":"763:0:32"},"scope":47107,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":47083,"nodeType":"FunctionDefinition","src":"776:69:32","nodes":[],"body":{"id":47082,"nodeType":"Block","src":"838:7:32","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":47080,"kind":"modifierInvocation","modifierName":{"id":47079,"name":"onlyInitializing","nameLocations":["821:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":46590,"src":"821:16:32"},"nodeType":"ModifierInvocation","src":"821:16:32"}],"name":"__Context_init_unchained","nameLocation":"785:24:32","parameters":{"id":47078,"nodeType":"ParameterList","parameters":[],"src":"809:2:32"},"returnParameters":{"id":47081,"nodeType":"ParameterList","parameters":[],"src":"838:0:32"},"scope":47107,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":47092,"nodeType":"FunctionDefinition","src":"850:96:32","nodes":[],"body":{"id":47091,"nodeType":"Block","src":"912:34:32","nodes":[],"statements":[{"expression":{"expression":{"id":47088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":47089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:32","memberName":"sender","nodeType":"MemberAccess","src":"929:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":47087,"id":47090,"nodeType":"Return","src":"922:17:32"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:32","parameters":{"id":47084,"nodeType":"ParameterList","parameters":[],"src":"869:2:32"},"returnParameters":{"id":47087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47092,"src":"903:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47085,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:32"},"scope":47107,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":47101,"nodeType":"FunctionDefinition","src":"952:99:32","nodes":[],"body":{"id":47100,"nodeType":"Block","src":"1019:32:32","nodes":[],"statements":[{"expression":{"expression":{"id":47097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":47098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:32","memberName":"data","nodeType":"MemberAccess","src":"1036:8:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":47096,"id":47099,"nodeType":"Return","src":"1029:15:32"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:32","parameters":{"id":47093,"nodeType":"ParameterList","parameters":[],"src":"969:2:32"},"returnParameters":{"id":47096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47101,"src":"1003:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":47094,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:32"},"scope":47107,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":47106,"nodeType":"VariableDeclaration","src":"1316:25:32","nodes":[],"constant":false,"documentation":{"id":47102,"nodeType":"StructuredDocumentation","src":"1057:254:32","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1336:5:32","scope":47107,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":47103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47105,"length":{"hexValue":"3530","id":47104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:32","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":47070,"name":"Initializable","nameLocations":["691:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":46645,"src":"691:13:32"},"id":47071,"nodeType":"InheritanceSpecifier","src":"691:13:32"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":47069,"nodeType":"StructuredDocumentation","src":"154:496:32","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[47107,46645],"name":"ContextUpgradeable","nameLocation":"669:18:32","scope":47108,"usedErrors":[]}],"license":"MIT"},"id":32}